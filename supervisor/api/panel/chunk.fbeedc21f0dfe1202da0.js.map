{"version":3,"sources":["webpack:///./src/data/auth.ts","webpack:///./hassio/src/dialogs/snapshot/dialog-hassio-snapshot.ts"],"names":["concat","location","protocol","host","customElement","property","_callee","params","regeneratorRuntime","wrap","_context","prev","next","fetchHassioSnapshotInfo","this","hass","slug","_snapshot","sent","_folders","folders","list","includes","push","name","checked","sort","a","b","_addons","addons","map","addon","version","_dialogParams","stop","_this2","html","_templateObject2","_closeDialog","createCloseHeading","_computeName","type","_computeSize","_formatDatetime","date","_restoreHass","ev","target","homeassistant","length","_templateObject3","item","_templateObject4","_updateFolders","_templateObject5","_templateObject6","_updateAddons","_templateObject7","_passwordInput","_snapshotPassword","_error","_templateObject8","_downloadClicked","mdiDownload","_partialRestoreClicked","mdiHistory","_templateObject9","_fullRestoreClicked","_deleteClicked","mdiDelete","_templateObject","haStyleDialog","css","_templateObject10","value","folder","detail","_this3","confirm","filter","data","password","callApi","then","alert","error","body","message","_this4","undefined","_this5","onDelete","_callee2","signedPath","_context2","path","callWS","t0","abrupt","replace","document","createElement","href","download","shadowRoot","appendChild","click","removeChild","Math","ceil","size","datetime","Date","toLocaleDateString","navigator","language","weekday","year","month","day","hour","minute","LitElement"],"mappings":"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","file":"chunk.fbeedc21f0dfe1202da0.js","sourcesContent":["import { HomeAssistant } from \"../types\";\n\nexport interface AuthProvider {\n  name: string;\n  id: string;\n  type: string;\n}\n\nexport interface Credential {\n  type: string;\n}\n\nexport interface SignedPath {\n  path: string;\n}\n\nexport const hassUrl = `${location.protocol}//${location.host}`;\n\nexport const getSignedPath = (\n  hass: HomeAssistant,\n  path: string\n): Promise<SignedPath> => hass.callWS({ type: \"auth/sign_path\", path });\n\nexport const fetchAuthProviders = () =>\n  fetch(\"/auth/providers\", {\n    credentials: \"same-origin\",\n  });\n\nexport const createAuthForUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  username: string,\n  password: string\n) =>\n  hass.callWS({\n    type: \"config/auth_provider/homeassistant/create\",\n    user_id: userId,\n    username,\n    password,\n  });\n","import \"@material/mwc-button\";\nimport { mdiDelete, mdiDownload, mdiHistory } from \"@mdi/js\";\nimport { PaperCheckboxElement } from \"@polymer/paper-checkbox/paper-checkbox\";\nimport \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { createCloseHeading } from \"../../../../src/components/ha-dialog\";\nimport \"../../../../src/components/ha-svg-icon\";\nimport { getSignedPath } from \"../../../../src/data/auth\";\nimport {\n  fetchHassioSnapshotInfo,\n  HassioSnapshotDetail,\n} from \"../../../../src/data/hassio/snapshot\";\nimport { PolymerChangedEvent } from \"../../../../src/polymer-types\";\nimport { haStyleDialog } from \"../../../../src/resources/styles\";\nimport { HomeAssistant } from \"../../../../src/types\";\nimport { HassioSnapshotDialogParams } from \"./show-dialog-hassio-snapshot\";\n\nconst _computeFolders = (folders) => {\n  const list: Array<{ slug: string; name: string; checked: boolean }> = [];\n  if (folders.includes(\"homeassistant\")) {\n    list.push({\n      slug: \"homeassistant\",\n      name: \"Home Assistant configuration\",\n      checked: true,\n    });\n  }\n  if (folders.includes(\"ssl\")) {\n    list.push({ slug: \"ssl\", name: \"SSL\", checked: true });\n  }\n  if (folders.includes(\"share\")) {\n    list.push({ slug: \"share\", name: \"Share\", checked: true });\n  }\n  if (folders.includes(\"addons/local\")) {\n    list.push({ slug: \"addons/local\", name: \"Local add-ons\", checked: true });\n  }\n  return list;\n};\n\nconst _computeAddons = (addons) => {\n  return addons.map((addon) => ({\n    slug: addon.slug,\n    name: addon.name,\n    version: addon.version,\n    checked: true,\n  }));\n};\n\ninterface AddonItem {\n  slug: string;\n  name: string;\n  version: string;\n  checked: boolean | null | undefined;\n}\n\ninterface FolderItem {\n  slug: string;\n  name: string;\n  checked: boolean | null | undefined;\n}\n\n@customElement(\"dialog-hassio-snapshot\")\nclass HassioSnapshotDialog extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() private _error?: string;\n\n  @property() private _snapshot?: HassioSnapshotDetail;\n\n  @property() private _folders!: FolderItem[];\n\n  @property() private _addons!: AddonItem[];\n\n  @property() private _dialogParams?: HassioSnapshotDialogParams;\n\n  @property() private _snapshotPassword!: string;\n\n  @property() private _restoreHass: boolean | null | undefined = true;\n\n  public async showDialog(params: HassioSnapshotDialogParams) {\n    this._snapshot = await fetchHassioSnapshotInfo(this.hass, params.slug);\n    this._folders = _computeFolders(\n      this._snapshot.folders\n    ).sort((a: FolderItem, b: FolderItem) => (a.name > b.name ? 1 : -1));\n    this._addons = _computeAddons(\n      this._snapshot.addons\n    ).sort((a: AddonItem, b: AddonItem) => (a.name > b.name ? 1 : -1));\n\n    this._dialogParams = params;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._dialogParams || !this._snapshot) {\n      return html``;\n    }\n    return html`\n      <ha-dialog\n        open\n        stacked\n        @closing=${this._closeDialog}\n        .heading=${createCloseHeading(this.hass, this._computeName)}\n      >\n        <div class=\"details\">\n          ${this._snapshot.type === \"full\"\n            ? \"Full snapshot\"\n            : \"Partial snapshot\"}\n          (${this._computeSize})<br />\n          ${this._formatDatetime(this._snapshot.date)}\n        </div>\n        <div>Home Assistant:</div>\n        <paper-checkbox\n          .checked=${this._restoreHass}\n          @change=\"${(ev: Event) => {\n            this._restoreHass = (ev.target as PaperCheckboxElement).checked;\n          }}\"\n        >\n          Home Assistant ${this._snapshot.homeassistant}\n        </paper-checkbox>\n        ${this._folders.length\n          ? html`\n              <div>Folders:</div>\n              <paper-dialog-scrollable class=\"no-margin-top\">\n                ${this._folders.map((item) => {\n                  return html`\n                    <paper-checkbox\n                      .checked=${item.checked}\n                      @change=\"${(ev: Event) =>\n                        this._updateFolders(\n                          item,\n                          (ev.target as PaperCheckboxElement).checked\n                        )}\"\n                    >\n                      ${item.name}\n                    </paper-checkbox>\n                  `;\n                })}\n              </paper-dialog-scrollable>\n            `\n          : \"\"}\n        ${this._addons.length\n          ? html`\n              <div>Add-on:</div>\n              <paper-dialog-scrollable class=\"no-margin-top\">\n                ${this._addons.map((item) => {\n                  return html`\n                    <paper-checkbox\n                      .checked=${item.checked}\n                      @change=\"${(ev: Event) =>\n                        this._updateAddons(\n                          item,\n                          (ev.target as PaperCheckboxElement).checked\n                        )}\"\n                    >\n                      ${item.name}\n                    </paper-checkbox>\n                  `;\n                })}\n              </paper-dialog-scrollable>\n            `\n          : \"\"}\n        ${this._snapshot.protected\n          ? html`\n              <paper-input\n                autofocus=\"\"\n                label=\"Password\"\n                type=\"password\"\n                @value-changed=${this._passwordInput}\n                .value=${this._snapshotPassword}\n              ></paper-input>\n            `\n          : \"\"}\n        ${this._error ? html` <p class=\"error\">Error: ${this._error}</p> ` : \"\"}\n\n        <div>Actions:</div>\n\n        <mwc-button @click=${this._downloadClicked} slot=\"primaryAction\">\n          <ha-svg-icon path=${mdiDownload} class=\"icon\"></ha-svg-icon>\n          Download Snapshot\n        </mwc-button>\n\n        <mwc-button\n          @click=${this._partialRestoreClicked}\n          slot=\"secondaryAction\"\n        >\n          <ha-svg-icon path=${mdiHistory} class=\"icon\"></ha-svg-icon>\n          Restore Selected\n        </mwc-button>\n        ${this._snapshot.type === \"full\"\n          ? html`\n              <mwc-button\n                @click=${this._fullRestoreClicked}\n                slot=\"secondaryAction\"\n              >\n                <ha-svg-icon path=${mdiHistory} class=\"icon\"></ha-svg-icon>\n                Wipe &amp; restore\n              </mwc-button>\n            `\n          : \"\"}\n        <mwc-button @click=${this._deleteClicked} slot=\"secondaryAction\">\n          <ha-svg-icon path=${mdiDelete} class=\"icon warning\"></ha-svg-icon>\n          <span class=\"warning\">Delete Snapshot</span>\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        paper-checkbox {\n          display: block;\n          margin: 4px;\n        }\n        .details {\n          color: var(--secondary-text-color);\n        }\n        .warning,\n        .error {\n          color: var(--google-red-500);\n        }\n        .buttons {\n          display: flex;\n          flex-direction: column;\n        }\n        .buttons li {\n          list-style-type: none;\n        }\n        .buttons .icon {\n          margin-right: 16px;\n        }\n        .no-margin-top {\n          margin-top: 0;\n        }\n      `,\n    ];\n  }\n\n  private _updateFolders(item: FolderItem, value: boolean | null | undefined) {\n    this._folders = this._folders.map((folder) => {\n      if (folder.slug === item.slug) {\n        folder.checked = value;\n      }\n      return folder;\n    });\n  }\n\n  private _updateAddons(item: AddonItem, value: boolean | null | undefined) {\n    this._addons = this._addons.map((addon) => {\n      if (addon.slug === item.slug) {\n        addon.checked = value;\n      }\n      return addon;\n    });\n  }\n\n  private _passwordInput(ev: PolymerChangedEvent<string>) {\n    this._snapshotPassword = ev.detail.value;\n  }\n\n  private _partialRestoreClicked() {\n    if (!confirm(\"Are you sure you want to restore this snapshot?\")) {\n      return;\n    }\n\n    const addons = this._addons\n      .filter((addon) => addon.checked)\n      .map((addon) => addon.slug);\n\n    const folders = this._folders\n      .filter((folder) => folder.checked)\n      .map((folder) => folder.slug);\n\n    const data: {\n      homeassistant: boolean | null | undefined;\n      addons: any;\n      folders: any;\n      password?: string;\n    } = {\n      homeassistant: this._restoreHass,\n      addons,\n      folders,\n    };\n\n    if (this._snapshot!.protected) {\n      data.password = this._snapshotPassword;\n    }\n\n    this.hass\n      .callApi(\n        \"POST\",\n\n        `hassio/snapshots/${this._snapshot!.slug}/restore/partial`,\n        data\n      )\n      .then(\n        () => {\n          alert(\"Snapshot restored!\");\n          this._closeDialog();\n        },\n        (error) => {\n          this._error = error.body.message;\n        }\n      );\n  }\n\n  private _fullRestoreClicked() {\n    if (!confirm(\"Are you sure you want to restore this snapshot?\")) {\n      return;\n    }\n\n    const data = this._snapshot!.protected\n      ? { password: this._snapshotPassword }\n      : undefined;\n\n    this.hass\n      .callApi(\n        \"POST\",\n        `hassio/snapshots/${this._snapshot!.slug}/restore/full`,\n        data\n      )\n      .then(\n        () => {\n          alert(\"Snapshot restored!\");\n          this._closeDialog();\n        },\n        (error) => {\n          this._error = error.body.message;\n        }\n      );\n  }\n\n  private _deleteClicked() {\n    if (!confirm(\"Are you sure you want to delete this snapshot?\")) {\n      return;\n    }\n\n    this.hass\n\n      .callApi(\"POST\", `hassio/snapshots/${this._snapshot!.slug}/remove`)\n      .then(\n        () => {\n          this._dialogParams!.onDelete();\n          this._closeDialog();\n        },\n        (error) => {\n          this._error = error.body.message;\n        }\n      );\n  }\n\n  private async _downloadClicked() {\n    let signedPath: { path: string };\n    try {\n      signedPath = await getSignedPath(\n        this.hass,\n        `/api/hassio/snapshots/${this._snapshot!.slug}/download`\n      );\n    } catch (err) {\n      alert(`Error: ${err.message}`);\n      return;\n    }\n\n    const name = this._computeName.replace(/[^a-z0-9]+/gi, \"_\");\n    const a = document.createElement(\"a\");\n    a.href = signedPath.path;\n    a.download = `Hass_io_${name}.tar`;\n    this.shadowRoot!.appendChild(a);\n    a.click();\n    this.shadowRoot!.removeChild(a);\n  }\n\n  private get _computeName() {\n    return this._snapshot\n      ? this._snapshot.name || this._snapshot.slug\n      : \"Unnamed snapshot\";\n  }\n\n  private get _computeSize() {\n    return Math.ceil(this._snapshot!.size * 10) / 10 + \" MB\";\n  }\n\n  private _formatDatetime(datetime) {\n    return new Date(datetime).toLocaleDateString(navigator.language, {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"2-digit\",\n    });\n  }\n\n  private _closeDialog() {\n    this._dialogParams = undefined;\n    this._snapshot = undefined;\n    this._snapshotPassword = \"\";\n    this._folders = [];\n    this._addons = [];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-hassio-snapshot\": HassioSnapshotDialog;\n  }\n}\n"],"sourceRoot":""}