{"version":3,"file":"8c9c6e81.js","mappings":";;;;;AAkEA;AACA;;;;AAMA;;;AAGA;;;;;AAKA;AACA;AACA;AACA;;;;;AAOA;AAGA;AACA;;;;;AAKA;;AAIA;;;;AAIA;;AAIA;;AAEA;;AAGA;;AAIA;AACA;;;AAIA;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAhGA","sources":["webpack://home-assistant-frontend/./hassio/src/dialogs/hardware/dialog-hassio-hardware.ts"],"sourcesContent":["import { mdiClose } from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../src/common/dom/fire_event\";\nimport \"../../../../src/components/search-input\";\nimport { stringCompare } from \"../../../../src/common/string/compare\";\nimport \"../../../../src/components/ha-dialog\";\nimport \"../../../../src/components/ha-expansion-panel\";\nimport \"../../../../src/components/ha-icon-button\";\nimport { HassioHardwareInfo } from \"../../../../src/data/hassio/hardware\";\nimport { dump } from \"../../../../src/resources/js-yaml-dump\";\nimport { haStyle, haStyleDialog } from \"../../../../src/resources/styles\";\nimport { HomeAssistant } from \"../../../../src/types\";\nimport { HassioHardwareDialogParams } from \"./show-dialog-hassio-hardware\";\n\nconst _filterDevices = memoizeOne(\n  (showAdvanced: boolean, hardware: HassioHardwareInfo, filter: string) =>\n    hardware.devices\n      .filter(\n        (device) =>\n          (showAdvanced ||\n            [\"tty\", \"gpio\", \"input\"].includes(device.subsystem)) &&\n          (device.by_id?.toLowerCase().includes(filter) ||\n            device.name.toLowerCase().includes(filter) ||\n            device.dev_path.toLocaleLowerCase().includes(filter) ||\n            JSON.stringify(device.attributes)\n              .toLocaleLowerCase()\n              .includes(filter))\n      )\n      .sort((a, b) => stringCompare(a.name, b.name))\n);\n\n@customElement(\"dialog-hassio-hardware\")\nclass HassioHardwareDialog extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _dialogParams?: HassioHardwareDialogParams;\n\n  @state() private _filter?: string;\n\n  public showDialog(dialogParams: HassioHardwareDialogParams) {\n    this._dialogParams = dialogParams;\n  }\n\n  public closeDialog() {\n    this._dialogParams = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render(): TemplateResult {\n    if (!this._dialogParams) {\n      return html``;\n    }\n\n    const devices = _filterDevices(\n      this.hass.userData?.showAdvanced || false,\n      this._dialogParams.hardware,\n      (this._filter || \"\").toLowerCase()\n    );\n\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        hideActions\n        @closed=${this.closeDialog}\n        .heading=${this._dialogParams.supervisor.localize(\n          \"dialog.hardware.title\"\n        )}\n      >\n        <div class=\"header\" slot=\"heading\">\n          <h2>\n            ${this._dialogParams.supervisor.localize(\"dialog.hardware.title\")}\n          </h2>\n          <ha-icon-button\n            .label=${this._dialogParams.supervisor.localize(\"common.close\")}\n            .path=${mdiClose}\n            dialogAction=\"close\"\n          ></ha-icon-button>\n          <search-input\n            .hass=${this.hass}\n            .filter=${this._filter}\n            @value-changed=${this._handleSearchChange}\n            .label=${this._dialogParams.supervisor.localize(\n              \"dialog.hardware.search\"\n            )}\n          >\n          </search-input>\n        </div>\n\n        ${devices.map(\n          (device) =>\n            html`<ha-expansion-panel\n              .header=${device.name}\n              .secondary=${device.by_id || undefined}\n              outlined\n            >\n              <div class=\"device-property\">\n                <span>\n                  ${this._dialogParams!.supervisor.localize(\n                    \"dialog.hardware.subsystem\"\n                  )}:\n                </span>\n                <span>${device.subsystem}</span>\n              </div>\n              <div class=\"device-property\">\n                <span>\n                  ${this._dialogParams!.supervisor.localize(\n                    \"dialog.hardware.device_path\"\n                  )}:\n                </span>\n                <code>${device.dev_path}</code>\n              </div>\n              ${device.by_id\n                ? html` <div class=\"device-property\">\n                    <span>\n                      ${this._dialogParams!.supervisor.localize(\n                        \"dialog.hardware.id\"\n                      )}:\n                    </span>\n                    <code>${device.by_id}</code>\n                  </div>`\n                : \"\"}\n              <div class=\"attributes\">\n                <span>\n                  ${this._dialogParams!.supervisor.localize(\n                    \"dialog.hardware.attributes\"\n                  )}:\n                </span>\n                <pre>${dump(device.attributes, { indent: 2 })}</pre>\n              </div>\n            </ha-expansion-panel>`\n        )}\n      </ha-dialog>\n    `;\n  }\n\n  private _handleSearchChange(ev: CustomEvent) {\n    this._filter = ev.detail.value;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      haStyleDialog,\n      css`\n        ha-icon-button {\n          position: absolute;\n          right: 16px;\n          top: 10px;\n          text-decoration: none;\n          color: var(--primary-text-color);\n        }\n        h2 {\n          margin: 18px 42px 0 18px;\n          color: var(--primary-text-color);\n        }\n\n        ha-expansion-panel {\n          margin: 4px 0;\n        }\n        pre,\n        code {\n          background-color: var(--markdown-code-background-color, none);\n          border-radius: 3px;\n        }\n        pre {\n          padding: 16px;\n          overflow: auto;\n          line-height: 1.45;\n          font-family: var(--code-font-family, monospace);\n        }\n        code {\n          font-size: 85%;\n          padding: 0.2em 0.4em;\n        }\n        search-input {\n          margin: 8px 16px 0;\n          display: block;\n        }\n        .device-property {\n          display: flex;\n          justify-content: space-between;\n        }\n        .attributes {\n          margin-top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-hassio-hardware\": HassioHardwareDialog;\n  }\n}\n"],"names":[],"sourceRoot":""}