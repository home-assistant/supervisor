{"version":3,"file":"a0714d2f.js","mappings":";;;;AA0EA","sources":["webpack://home-assistant-frontend/./src/components/ha-faded.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\n\n@customElement(\"ha-faded\")\nclass HaFaded extends LitElement {\n  @property({ type: Number, attribute: \"faded-height\" })\n  public fadedHeight = 102;\n\n  @state() _contentShown = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <div\n        class=\"container ${classMap({ faded: !this._contentShown })}\"\n        style=${!this._contentShown ? `max-height: ${this.fadedHeight}px` : \"\"}\n        @click=${this._showContent}\n      >\n        <slot\n          @iron-resize=${\n            // ha-markdown-element fire this when render is complete\n            this._setShowContent\n          }\n        ></slot>\n      </div>\n    `;\n  }\n\n  get _slottedHeight(): number {\n    return (\n      (\n        this.shadowRoot!.querySelector(\".container\")\n          ?.firstElementChild as HTMLSlotElement\n      )\n        .assignedElements()\n        .reduce(\n          (partial, element) => partial + (element as HTMLElement).offsetHeight,\n          0\n        ) || 0\n    );\n  }\n\n  private _setShowContent() {\n    const height = this._slottedHeight;\n    this._contentShown = height !== 0 && height <= this.fadedHeight + 50;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._setShowContent();\n  }\n\n  private _showContent(): void {\n    this._contentShown = true;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .container {\n        display: block;\n        height: auto;\n        cursor: default;\n      }\n      .faded {\n        cursor: pointer;\n        -webkit-mask-image: linear-gradient(\n          to bottom,\n          black 25%,\n          transparent 100%\n        );\n        mask-image: linear-gradient(to bottom, black 25%, transparent 100%);\n        overflow-y: hidden;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-faded\": HaFaded;\n  }\n}\n"],"names":[],"sourceRoot":""}