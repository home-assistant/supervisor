"use strict";(self.webpackChunkhome_assistant_frontend=self.webpackChunkhome_assistant_frontend||[]).push([[2094],{72094:(e,s,t)=>{t.r(s);var i=t(17463),a=t(34541),o=t(47838),n=t(68144),r=t(79932),d=t(47181),h=t(83849),l=t(15493),c=t(96151),u=(t(5666),t(34154)),p=t(41682),v=t(63864);function g(e){return document.cookie=`ingress_session=${e};path=/api/hassio_ingress/;SameSite=Strict${"https:"===location.protocol?";Secure":""}`,e}const f=async e=>{if((0,v.I)(e.config.version,2021,2,4)){return g((await e.callWS({type:"supervisor/api",endpoint:"/ingress/session",method:"post"})).session)}return g((await e.callApi("POST","hassio/ingress/session")).data.session)};var y=t(26765);t(15291),t(15803);(0,i.Z)([(0,r.Mo)("hassio-ingress-view")],(function(e,s){class t extends s{constructor(...s){super(...s),e(this)}}return{F:t,d:[{kind:"field",decorators:[(0,r.Cb)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,r.Cb)({attribute:!1})],key:"supervisor",value:void 0},{kind:"field",decorators:[(0,r.Cb)()],key:"route",value:void 0},{kind:"field",decorators:[(0,r.Cb)()],key:"ingressPanel",value:()=>!1},{kind:"field",decorators:[(0,r.SB)()],key:"_addon",value:void 0},{kind:"field",decorators:[(0,r.Cb)({type:Boolean})],key:"narrow",value:()=>!1},{kind:"field",key:"_sessionKeepAlive",value:void 0},{kind:"method",key:"disconnectedCallback",value:function(){(0,a.Z)((0,o.Z)(t.prototype),"disconnectedCallback",this).call(this),this._sessionKeepAlive&&(clearInterval(this._sessionKeepAlive),this._sessionKeepAlive=void 0)}},{kind:"method",key:"render",value:function(){if(!this._addon)return n.dy` <hass-loading-screen></hass-loading-screen> `;const e=n.dy`<iframe title="${this._addon.name}" src="${this._addon.ingress_url}"> </iframe>`;return this.ingressPanel?n.dy`${this.narrow||"always_hidden"===this.hass.dockedSidebar?n.dy`<div class="header"> <ha-icon-button .label="${this.hass.localize("ui.sidebar.sidebar_toggle")}" .path="${"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z"}" @click="${this._toggleMenu}"></ha-icon-button> <div class="main-title">${this._addon.name}</div> </div> ${e}`:e}`:n.dy`<hass-subpage .hass="${this.hass}" .header="${this._addon.name}" .narrow="${this.narrow}"> ${e} </hass-subpage>`}},{kind:"method",key:"firstUpdated",value:async function(){if(""===this.route.path){const e=(0,l.io)("addon");let s;if(e){try{s=await(0,u.AD)(this.hass,e)}catch(s){return await(0,y.Ys)(this,{text:(0,p.js)(s),title:e}),await(0,c.y)(),void(0,h.c)("/hassio/store",{replace:!0})}s.version?s.ingress?(0,h.c)(`/hassio/ingress/${s.slug}`,{replace:!0}):(await(0,y.Ys)(this,{text:this.supervisor.localize("my.error_addon_no_ingress"),title:s.name}),await(0,c.y)(),(0,h.c)(`/hassio/addon/${s.slug}/info`,{replace:!0})):(await(0,y.Ys)(this,{text:this.supervisor.localize("my.error_addon_not_installed"),title:s.name}),await(0,c.y)(),(0,h.c)(`/hassio/addon/${s.slug}/info`,{replace:!0}))}}}},{kind:"method",key:"updated",value:function(e){if((0,a.Z)((0,o.Z)(t.prototype),"updated",this).call(this,e),!e.has("route"))return;const s=this.route.path.substr(1),i=e.get("route"),n=i?i.path.substr(1):void 0;s&&s!==n&&this._fetchData(s)}},{kind:"method",key:"_fetchData",value:async function(e){const s=f(this.hass);let t,i;try{t=await(0,u.AD)(this.hass,e)}catch(e){return await(0,y.Ys)(this,{text:"Unable to fetch add-on info to start Ingress",title:"Supervisor"}),await(0,c.y)(),void history.back()}if(!t.ingress_url)return await(0,y.Ys)(this,{text:"Add-on does not support Ingress",title:t.name}),await(0,c.y)(),void history.back();if("started"!==t.state)return await(0,y.Ys)(this,{text:"Add-on is not running. Please start it first",title:t.name}),await(0,c.y)(),void(0,h.c)(`/hassio/addon/${t.slug}/info`,{replace:!0});try{i=await s}catch(e){return await(0,y.Ys)(this,{text:"Unable to create an Ingress session",title:t.name}),await(0,c.y)(),void history.back()}this._sessionKeepAlive&&clearInterval(this._sessionKeepAlive),this._sessionKeepAlive=window.setInterval((async()=>{try{await(async(e,s)=>{(0,v.I)(e.config.version,2021,2,4)?await e.callWS({type:"supervisor/api",endpoint:"/ingress/validate_session",method:"post",data:{session:s}}):await e.callApi("POST","hassio/ingress/validate_session",{session:s})})(this.hass,i)}catch(e){i=await f(this.hass)}}),6e4),this._addon=t}},{kind:"method",key:"_toggleMenu",value:function(){(0,d.B)(this,"hass-toggle-menu")}},{kind:"get",static:!0,key:"styles",value:function(){return n.iv`iframe{display:block;width:100%;height:100%;border:0}.header+iframe{height:calc(100% - 40px)}.header{display:flex;align-items:center;font-size:16px;height:40px;padding:0 16px;pointer-events:none;background-color:var(--app-header-background-color);font-weight:400;color:var(--app-header-text-color,#fff);border-bottom:var(--app-header-border-bottom,none);box-sizing:border-box;--mdc-icon-size:20px}.main-title{margin:0 0 0 24px;line-height:20px;flex-grow:1}ha-icon-button{pointer-events:auto}hass-subpage{--app-header-background-color:var(--sidebar-background-color);--app-header-text-color:var(--sidebar-text-color);--app-header-border-bottom:1px solid var(--divider-color)}`}}]}}),n.oi)},15493:(e,s,t)=>{t.d(s,{Q2:()=>i,io:()=>a,ou:()=>o});const i=()=>{const e={},s=new URLSearchParams(location.search);for(const[t,i]of s.entries())e[t]=i;return e},a=e=>new URLSearchParams(window.location.search).get(e),o=e=>{const s=new URLSearchParams;return Object.entries(e).forEach((([e,t])=>{s.append(e,t)})),s.toString()}}}]);
//# sourceMappingURL=2094-RYraiNX9m1Y.js.map