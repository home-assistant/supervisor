{"version":3,"file":"e9b0de19.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;;;;;;;;;;;;;;;;AC7EA;;;;;;;;;;;;;;;;;AAAA;ACwCA;AAEA;;;AAKA;AACA;AAEA;;AAGA;;;AAKA;;AAMA;AAGA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AA3CA;;ACwFA;AACA;AACA;;;AAGA;;;AAKA;AAGA;AAEA;;AAGA;;;AAGA;;;AAIA;;AAaA;;AAGA;;AASA;;AAGA;;;;AAKA;AACA;;;;AAIA;;;;AAOA;;;AAIA;;;AAaA;;AAGA;AAEA;;;;;AAKA;;;AAKA;;;AAIA;AACA;;;AAGA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA7JA","sources":["webpack://home-assistant-frontend/./node_modules/@polymer/paper-item/paper-icon-item.js","webpack://home-assistant-frontend/./src/components/ha-logo-svg.ts","webpack://home-assistant-frontend/./src/panels/config/dashboard/ha-config-updates.ts","webpack://home-assistant-frontend/./hassio/src/update-available/update-available-dashboard.ts"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","import { css, CSSResultGroup, LitElement, svg, SVGTemplateResult } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-logo-svg\")\nexport class HaLogoSvg extends LitElement {\n  protected render(): SVGTemplateResult {\n    return svg`\n      <svg version=\"1.1\" viewBox=\"0 0 500 500\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <defs>\n          <path id=\"a\" d=\"m44.041 343.22v-133.64h-34.753a9.333 9.333 0 0 1-6.655-15.876l187.01-190.21c4.517-4.594 11.903-4.657 16.498-0.14l0.12 0.12 97.601 98.794v-18.297a7.778 7.778 0 0 1 7.778-7.778h32.41a7.778 7.778 0 0 1 7.779 7.778v67.138l41.568 42.618a9.333 9.333 0 0 1-6.682 15.85h-34.886v133.64a7.778 7.778 0 0 1-7.778 7.778h-292.23a7.778 7.778 0 0 1-7.778-7.778zm206.39-163.26a15.029 15.029 0 0 0 1.46-6.486c0-8.308-6.71-15.043-14.989-15.043-8.278 0-14.989 6.735-14.989 15.043s6.711 15.044 14.99 15.044c2.314 0 4.505-0.527 6.462-1.467l21.518 21.596v20.918l-26.981 27.078v-19.84a15.046 15.046 0 0 0 9.993-14.187c0-8.308-6.711-15.044-14.99-15.044-8.278 0-14.99 6.736-14.99 15.044 0 6.55 4.172 12.122 9.994 14.187v29.868l-24.983 25.073v-147.28l20.519-20.592a14.886 14.886 0 0 0 6.462 1.466c8.279 0 14.99-6.735 14.99-15.044 0-8.308-6.711-15.043-14.99-15.043-8.278 0-14.989 6.735-14.989 15.043 0 2.323 0.524 4.522 1.46 6.486l-18.448 18.515-18.449-18.515a15.029 15.029 0 0 0 1.46-6.486c0-8.308-6.71-15.043-14.989-15.043-8.278 0-14.989 6.735-14.989 15.043 0 8.309 6.711 15.044 14.99 15.044 2.314 0 4.505-0.527 6.462-1.466l20.518 20.592v105.16l-35.974-36.104v-28.865a15.046 15.046 0 0 0 9.993-14.187c0-8.309-6.711-15.044-14.99-15.044-8.278 0-14.99 6.735-14.99 15.044 0 6.55 4.172 12.122 9.994 14.187v18.837l-27.98-28.081v-27.863a15.046 15.046 0 0 0 9.993-14.187c0-8.308-6.711-15.044-14.99-15.044-8.278 0-14.99 6.736-14.99 15.044 0 6.55 4.172 12.122 9.994 14.187v32.017l30.907 31.018h-17.77c-2.058-5.843-7.61-10.029-14.137-10.029-8.278 0-14.99 6.735-14.99 15.043 0 8.309 6.712 15.044 14.99 15.044 6.527 0 12.08-4.186 14.137-10.03h27.763l43.04 43.196v75.074l-22.983-23.066v-28.866a15.046 15.046 0 0 0 9.993-14.187c0-8.308-6.711-15.043-14.99-15.043-8.278 0-14.99 6.735-14.99 15.043 0 6.55 4.172 12.122 9.994 14.187v18.837l-33.439-33.558a15.029 15.029 0 0 0 1.461-6.486c0-8.308-6.71-15.043-14.99-15.043-8.278 0-14.989 6.735-14.989 15.043s6.711 15.043 14.99 15.043c2.314 0 4.506-0.526 6.462-1.466l33.439 33.559h-17.77c-2.058-5.843-7.61-10.03-14.137-10.03-8.278 0-14.99 6.736-14.99 15.044s6.712 15.043 14.99 15.043c6.527 0 12.079-4.186 14.137-10.029h27.763l27.98 28.081h14.132l28.98-29.083h26.763c2.058 5.842 7.61 10.028 14.137 10.028 8.278 0 14.99-6.735 14.99-15.043s-6.712-15.043-14.99-15.043c-6.527 0-12.079 4.186-14.137 10.029h-30.902l-26.91 27.006v-32.951l32.049-32.164h51.746c2.058 5.843 7.61 10.029 14.136 10.029 8.279 0 14.99-6.735 14.99-15.043 0-8.309-6.711-15.044-14.99-15.044-6.526 0-12.078 4.186-14.136 10.03h-41.755l29.908-30.016v-25.072l21.517-21.596a14.886 14.886 0 0 0 6.463 1.467c8.278 0 14.99-6.736 14.99-15.044s-6.712-15.043-14.99-15.043-14.99 6.735-14.99 15.043c0 2.323 0.525 4.522 1.461 6.486l-14.451 14.504v-45.917a15.046 15.046 0 0 0 9.993-14.187c0-8.309-6.711-15.044-14.99-15.044-8.278 0-14.99 6.735-14.99 15.044 0 6.55 4.172 12.122 9.994 14.187v45.915l-14.452-14.504zm-129.45 143.95c-3.311 0-5.996-2.694-5.996-6.017s2.685-6.017 5.996-6.017c3.312 0 5.996 2.694 5.996 6.017s-2.684 6.017-5.996 6.017zm43.97-45.13c-3.312 0-5.997-2.694-5.997-6.017s2.685-6.017 5.996-6.017c3.312 0 5.996 2.694 5.996 6.017s-2.684 6.017-5.996 6.017zm-51.964-7.02c-3.312 0-5.996-2.694-5.996-6.017s2.684-6.017 5.996-6.017c3.311 0 5.996 2.694 5.996 6.017s-2.685 6.017-5.996 6.017zm-4.997-50.144c-3.311 0-5.995-2.694-5.995-6.018 0-3.323 2.684-6.017 5.995-6.017 3.312 0 5.996 2.694 5.996 6.017 0 3.324-2.684 6.018-5.996 6.018zm124.91 7.02c-3.311 0-5.995-2.694-5.995-6.017 0-3.324 2.684-6.018 5.995-6.018 3.312 0 5.996 2.694 5.996 6.018 0 3.323-2.684 6.017-5.996 6.017zm67.952 46.133c-3.31 0-5.995-2.694-5.995-6.017 0-3.324 2.684-6.018 5.995-6.018 3.312 0 5.996 2.694 5.996 6.018 0 3.323-2.684 6.017-5.996 6.017zm-25.981 48.138c-3.312 0-5.996-2.694-5.996-6.017s2.684-6.017 5.996-6.017c3.311 0 5.996 2.694 5.996 6.017s-2.685 6.017-5.996 6.017zm27.98-143.41c-3.311 0-5.996-2.695-5.996-6.018s2.685-6.017 5.996-6.017 5.996 2.694 5.996 6.017-2.685 6.018-5.996 6.018zm-32.977-39.113c-3.311 0-5.996-2.694-5.996-6.017 0-3.324 2.685-6.018 5.996-6.018 3.312 0 5.996 2.694 5.996 6.018 0 3.323-2.684 6.017-5.996 6.017zm-39.972-24.07c-3.311 0-5.995-2.693-5.995-6.017 0-3.323 2.684-6.017 5.995-6.017 3.312 0 5.996 2.694 5.996 6.017 0 3.324-2.684 6.018-5.996 6.018zm-63.955 0c-3.31 0-5.995-2.693-5.995-6.017 0-3.323 2.684-6.017 5.995-6.017 3.312 0 5.996 2.694 5.996 6.017 0 3.324-2.684 6.018-5.996 6.018zm-51.963 23.067c-3.311 0-5.996-2.694-5.996-6.017 0-3.324 2.685-6.018 5.996-6.018s5.996 2.694 5.996 6.018c0 3.323-2.685 6.017-5.996 6.017zm37.973 37.107c-3.311 0-5.995-2.694-5.995-6.017 0-3.324 2.684-6.018 5.995-6.018 3.312 0 5.996 2.694 5.996 6.018 0 3.323-2.684 6.017-5.996 6.017zm84.94 3.009c-3.31 0-5.995-2.695-5.995-6.018s2.684-6.017 5.995-6.017c3.312 0 5.996 2.694 5.996 6.017s-2.684 6.018-5.996 6.018z\"/>\n        </defs>\n        <g fill=\"none\" fill-rule=\"evenodd\">\n          <rect width=\"500\" height=\"500\" ry=\"40.911\" fill=\"#41bdf5\" fill-rule=\"evenodd\" stroke-width=\"5.8497\"/>\n          <g transform=\"translate(52 70)\">\n          <mask id=\"b\" fill=\"#fff\">\n            <use xlink:href=\"#a\"/>\n          </mask>\n          <g fill=\"#FFF\" mask=\"url(#b)\">\n            <path d=\"M0 0h396v351H0z\"/>\n          </g>\n          </g>\n        </g>\n      </svg>`;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: var(--ha-icon-display, inline-flex);\n        align-items: center;\n        justify-content: center;\n        position: relative;\n        vertical-align: middle;\n        fill: currentcolor;\n        width: var(--mdc-icon-size, 24px);\n        height: var(--mdc-icon-size, 24px);\n      }\n      svg {\n        width: 100%;\n        height: 100%;\n        pointer-events: none;\n        display: block;\n      }\n    `;\n  }\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-logo-svg\": HaLogoSvg;\n  }\n}\n","import \"@material/mwc-button/mwc-button\";\nimport { mdiPackageVariant } from \"@mdi/js\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport \"../../../components/ha-alert\";\nimport \"../../../components/ha-logo-svg\";\nimport \"../../../components/ha-svg-icon\";\nimport { extractApiErrorMessage } from \"../../../data/hassio/common\";\nimport {\n  fetchSupervisorAvailableUpdates,\n  SupervisorAvailableUpdates,\n} from \"../../../data/supervisor/supervisor\";\nimport { HomeAssistant } from \"../../../types\";\n\nexport const SUPERVISOR_UPDATE_NAMES = {\n  core: \"Home Assistant Core\",\n  os: \"Home Assistant Operating System\",\n  supervisor: \"Home Assistant Supervisor\",\n};\n\n@customElement(\"ha-config-updates\")\nclass HaConfigUpdates extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _supervisorUpdates?: SupervisorAvailableUpdates[];\n\n  @state() private _error?: string;\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._loadSupervisorUpdates();\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this._error\n        ? html`<ha-alert\n            .title=${this.hass.localize(\n              \"ui.panel.config.updates.unable_to_fetch\"\n            )}\n            alert-type=\"error\"\n          >\n            ${this._error}\n          </ha-alert>`\n        : \"\"}\n      ${this._supervisorUpdates?.map(\n        (update) => html`\n          <ha-alert\n            .title=${update.update_type === \"addon\"\n              ? update.name\n              : SUPERVISOR_UPDATE_NAMES[update.update_type!]}\n          >\n            <span slot=\"icon\" class=\"icon\">\n              ${update.update_type === \"addon\"\n                ? update.icon\n                  ? html`<img src=\"/api/hassio${update.icon}\" />`\n                  : html`<ha-svg-icon .path=${mdiPackageVariant}></ha-svg-icon>`\n                : html`<ha-logo-svg></ha-logo-svg>`}\n            </span>\n            ${this.hass.localize(\"ui.panel.config.updates.version_available\", {\n              version_available: update.version_latest,\n            })}\n            <a href=\"/hassio${update.panel_path}\" slot=\"action\">\n              <mwc-button\n                .label=${this.hass.localize(\"ui.panel.config.updates.review\")}\n              >\n              </mwc-button>\n            </a>\n          </ha-alert>\n        `\n      )}\n    `;\n  }\n\n  private async _loadSupervisorUpdates(): Promise<void> {\n    try {\n      this._supervisorUpdates = await fetchSupervisorAvailableUpdates(\n        this.hass\n      );\n    } catch (err) {\n      this._error = extractApiErrorMessage(err);\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      a {\n        text-decoration: none;\n        color: var(--primary-text-color);\n      }\n      .icon {\n        place-self: center;\n      }\n      img,\n      ha-svg-icon,\n      ha-logo-svg {\n        width: var(--mdc-icon-size, 32px);\n        height: var(--mdc-icon-size, 32px);\n        padding-right: 12px;\n        display: block;\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-updates\": HaConfigUpdates;\n  }\n}\n","import \"@material/mwc-list/mwc-list-item\";\nimport {\n  css,\n  CSSResultGroup,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport \"../../../src/common/search/search-input\";\nimport \"../../../src/components/buttons/ha-progress-button\";\nimport \"../../../src/components/ha-alert\";\nimport \"../../../src/components/ha-button-menu\";\nimport \"../../../src/components/ha-card\";\nimport \"../../../src/components/ha-checkbox\";\nimport \"../../../src/components/ha-expansion-panel\";\nimport \"../../../src/components/ha-icon-button\";\nimport \"../../../src/components/ha-markdown\";\nimport \"../../../src/components/ha-settings-row\";\nimport \"../../../src/components/ha-svg-icon\";\nimport \"../../../src/components/ha-switch\";\nimport {\n  fetchHassioAddonChangelog,\n  fetchHassioAddonInfo,\n  HassioAddonDetails,\n  updateHassioAddon,\n} from \"../../../src/data/hassio/addon\";\nimport {\n  createHassioPartialBackup,\n  HassioPartialBackupCreateParams,\n} from \"../../../src/data/hassio/backup\";\nimport {\n  extractApiErrorMessage,\n  ignoreSupervisorError,\n} from \"../../../src/data/hassio/common\";\nimport { updateOS } from \"../../../src/data/hassio/host\";\nimport { updateSupervisor } from \"../../../src/data/hassio/supervisor\";\nimport { updateCore } from \"../../../src/data/supervisor/core\";\nimport { StoreAddon } from \"../../../src/data/supervisor/store\";\nimport { Supervisor } from \"../../../src/data/supervisor/supervisor\";\nimport { showAlertDialog } from \"../../../src/dialogs/generic/show-dialog-box\";\nimport \"../../../src/layouts/hass-loading-screen\";\nimport \"../../../src/layouts/hass-subpage\";\nimport \"../../../src/layouts/hass-tabs-subpage\";\nimport { SUPERVISOR_UPDATE_NAMES } from \"../../../src/panels/config/dashboard/ha-config-updates\";\nimport { HomeAssistant, Route } from \"../../../src/types\";\nimport { documentationUrl } from \"../../../src/util/documentation-url\";\nimport { addonArchIsSupported, extractChangelog } from \"../util/addon\";\n\nconst changelogUrl = (\n  hass: HomeAssistant,\n  entry: string,\n  version: string\n): string | undefined => {\n  if (entry === \"core\") {\n    return version?.includes(\"dev\")\n      ? \"https://github.com/home-assistant/core/commits/dev\"\n      : documentationUrl(hass, \"/latest-release-notes/\");\n  }\n  if (entry === \"os\") {\n    return version?.includes(\"dev\")\n      ? \"https://github.com/home-assistant/operating-system/commits/dev\"\n      : `https://github.com/home-assistant/operating-system/releases/tag/${version}`;\n  }\n  if (entry === \"supervisor\") {\n    return version?.includes(\"dev\")\n      ? \"https://github.com/home-assistant/supervisor/commits/main\"\n      : `https://github.com/home-assistant/supervisor/releases/tag/${version}`;\n  }\n  return undefined;\n};\n\nclass UpdateAvailableDashboard extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public supervisor!: Supervisor;\n\n  @property({ type: Boolean }) public narrow!: boolean;\n\n  @property({ attribute: false }) public route!: Route;\n\n  @state() private _updateEntry?: string;\n\n  @state() private _changelogContent?: string;\n\n  @state() private _addonInfo?: HassioAddonDetails;\n\n  @state() private _createBackup = true;\n\n  @state() private _action: \"backup\" | \"update\" | null = null;\n\n  @state() private _error?: string;\n\n  private _isAddon = false;\n\n  private _addonStoreInfo = memoizeOne(\n    (slug: string, storeAddons: StoreAddon[]) =>\n      storeAddons.find((addon) => addon.slug === slug)\n  );\n\n  protected render(): TemplateResult {\n    if (!this._updateEntry) {\n      return html``;\n    }\n    const name =\n      // @ts-ignore\n      this._addonInfo?.name || SUPERVISOR_UPDATE_NAMES[this._updateEntry];\n    const changelog = !this._isAddon\n      ? changelogUrl(\n          this.hass,\n          this._updateEntry,\n          this.supervisor[this._updateEntry]?.version\n        )\n      : undefined;\n    return html`\n      <hass-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .route=${this.route}\n      >\n        <ha-card\n          .header=${this.supervisor.localize(\"update_available.update_name\", {\n            name,\n          })}\n        >\n          <div class=\"card-content\">\n            ${this._error\n              ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`\n              : \"\"}\n            ${this._action === null\n              ? html`\n                  ${this._changelogContent\n                    ? html`\n                        <ha-expansion-panel header=\"Changelog\" outlined>\n                          <ha-markdown .content=${this._changelogContent}>\n                          </ha-markdown>\n                        </ha-expansion-panel>\n                      `\n                    : \"\"}\n                  <div class=\"versions\">\n                    <p>\n                      ${this.supervisor.localize(\n                        \"update_available.description\",\n                        {\n                          name,\n                          version:\n                            this._addonInfo?.version ||\n                            this.supervisor[this._updateEntry]?.version,\n                          newest_version:\n                            this._addonInfo?.version_latest ||\n                            this.supervisor[this._updateEntry]?.version_latest,\n                        }\n                      )}\n                    </p>\n                    ${this._updateEntry === \"core\"\n                      ? html`\n                          <i>\n                            ${this.supervisor.localize(\n                              \"update_available.core_note\",\n                              {\n                                version:\n                                  this._addonInfo?.version ||\n                                  this.supervisor[this._updateEntry]?.version,\n                              }\n                            )}\n                          </i>\n                        `\n                      : \"\"}\n                  </div>\n                  ${![\"os\", \"supervisor\"].includes(this._updateEntry)\n                    ? html`\n                        <ha-settings-row>\n                          <ha-checkbox\n                            slot=\"prefix\"\n                            .checked=${this._createBackup}\n                            @click=${this._toggleBackup}\n                          >\n                          </ha-checkbox>\n                          <span slot=\"heading\">\n                            ${this.supervisor.localize(\n                              \"update_available.create_backup\"\n                            )}\n                          </span>\n                        </ha-settings-row>\n                      `\n                    : \"\"}\n                `\n              : html`<ha-circular-progress alt=\"Updating\" size=\"large\" active>\n                  </ha-circular-progress>\n                  <p class=\"progress-text\">\n                    ${this._action === \"update\"\n                      ? this.supervisor.localize(\"update_available.updating\", {\n                          name,\n                          version:\n                            this._addonInfo?.version_latest ||\n                            this.supervisor[this._updateEntry]?.version_latest,\n                        })\n                      : this.supervisor.localize(\n                          \"update_available.creating_backup\",\n                          { name }\n                        )}\n                  </p>`}\n          </div>\n          ${this._action === null\n            ? html`\n                <div class=\"card-actions\">\n                  ${changelog\n                    ? html`<a\n                        .href=${changelog}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        <mwc-button\n                          .label=${this.supervisor.localize(\n                            \"update_available.open_release_notes\"\n                          )}\n                        >\n                        </mwc-button>\n                      </a>`\n                    : \"\"}\n                  <span></span>\n                  <ha-progress-button\n                    .disabled=${this._error !== undefined}\n                    @click=${this._update}\n                    raised\n                  >\n                    ${this.supervisor.localize(\"common.update\")}\n                  </ha-progress-button>\n                </div>\n              `\n            : \"\"}\n        </ha-card>\n      </hass-subpage>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    this._updateEntry = this.route.path.substring(1, this.route.path.length);\n    this._isAddon = ![\"core\", \"os\", \"supervisor\"].includes(this._updateEntry);\n    if (this._isAddon) {\n      this._loadAddonData();\n    }\n  }\n\n  private async _loadAddonData() {\n    try {\n      this._addonInfo = await fetchHassioAddonInfo(\n        this.hass,\n        this._updateEntry!\n      );\n    } catch (err) {\n      showAlertDialog(this, {\n        title: this._updateEntry,\n        text: extractApiErrorMessage(err),\n        confirm: () => history.back(),\n      });\n      return;\n    }\n    const addonStoreInfo =\n      !this._addonInfo.detached && !this._addonInfo.available\n        ? this._addonStoreInfo(\n            this._addonInfo.slug,\n            this.supervisor.store.addons\n          )\n        : undefined;\n\n    if (this._addonInfo.changelog) {\n      try {\n        const content = await fetchHassioAddonChangelog(\n          this.hass,\n          this._updateEntry!\n        );\n        this._changelogContent = extractChangelog(this._addonInfo, content);\n      } catch (err) {\n        this._error = extractApiErrorMessage(err);\n        return;\n      }\n    }\n\n    if (!this._addonInfo.available && addonStoreInfo) {\n      if (\n        !addonArchIsSupported(\n          this.supervisor.info.supported_arch,\n          this._addonInfo.arch\n        )\n      ) {\n        this._error = this.supervisor.localize(\n          \"addon.dashboard.not_available_arch\"\n        );\n      } else {\n        this._error = this.supervisor.localize(\n          \"addon.dashboard.not_available_arch\",\n          {\n            core_version_installed: this.supervisor.core.version,\n            core_version_needed: addonStoreInfo.homeassistant,\n          }\n        );\n      }\n    }\n  }\n\n  private _toggleBackup() {\n    this._createBackup = !this._createBackup;\n  }\n\n  private async _update() {\n    if (this._createBackup) {\n      let backupArgs: HassioPartialBackupCreateParams;\n      if (this._isAddon) {\n        backupArgs = {\n          name: `addon_${this._updateEntry}_${this._addonInfo?.version}`,\n          addons: [this._updateEntry!],\n          homeassistant: false,\n        };\n      } else {\n        backupArgs = {\n          name: `${this._updateEntry}_${this._addonInfo?.version}`,\n          folders: [\"homeassistant\"],\n          homeassistant: true,\n        };\n      }\n      this._action = \"backup\";\n      try {\n        await createHassioPartialBackup(this.hass, backupArgs);\n      } catch (err: any) {\n        this._error = extractApiErrorMessage(err);\n        this._action = null;\n        return;\n      }\n    }\n\n    this._action = \"update\";\n    try {\n      if (this._isAddon) {\n        await updateHassioAddon(this.hass, this._updateEntry!);\n      } else if (this._updateEntry === \"core\") {\n        await updateCore(this.hass);\n      } else if (this._updateEntry === \"os\") {\n        await updateOS(this.hass);\n      } else if (this._updateEntry === \"supervisor\") {\n        await updateSupervisor(this.hass);\n      }\n    } catch (err: any) {\n      if (this.hass.connection.connected && !ignoreSupervisorError(err)) {\n        this._error = extractApiErrorMessage(err);\n        this._action = null;\n        return;\n      }\n    }\n    history.back();\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n    hass-subpage {\n      --app-header-background-color: background-color: var(--primary-background-color);\n    }\n      ha-card {\n        margin: auto;\n        margin-top: 16px;\n        max-width: 600px;\n      }\n      a {\n        text-decoration: none;\n        color: var(--primary-text-color);\n      }\n      ha-settings-row {\n        padding: 0;\n      }\n      .card-actions {\n        display: flex;\n        justify-content: space-between;\n      }\n\n      ha-circular-progress {\n        display: block;\n        margin: 32px;\n        text-align: center;\n      }\n\n      .progress-text {\n        text-align: center;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"update-available-dashboard\", UpdateAvailableDashboard);\n"],"names":[],"sourceRoot":""}