{"version":3,"file":"30150643.js","mappings":";;;;AAoDA;AACA;;AAKA;AAGA;AACA;;;AAGA;AAGA;AACA;;;AAGA;;AAEA;;AAEA;;;AA9BA;;;;;AA1BA","sources":["webpack://home-assistant-frontend/./hassio/src/dialogs/backup/dialog-hassio-create-backup.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../src/common/dom/fire_event\";\nimport \"../../../../src/components/ha-alert\";\nimport \"../../../../src/components/buttons/ha-progress-button\";\nimport { createCloseHeading } from \"../../../../src/components/ha-dialog\";\nimport { extractApiErrorMessage } from \"../../../../src/data/hassio/common\";\nimport {\n  createHassioFullBackup,\n  createHassioPartialBackup,\n} from \"../../../../src/data/hassio/backup\";\nimport { showAlertDialog } from \"../../../../src/dialogs/generic/show-dialog-box\";\nimport { haStyle, haStyleDialog } from \"../../../../src/resources/styles\";\nimport { HomeAssistant } from \"../../../../src/types\";\nimport \"../../components/supervisor-backup-content\";\nimport type { SupervisorBackupContent } from \"../../components/supervisor-backup-content\";\nimport { HassioCreateBackupDialogParams } from \"./show-dialog-hassio-create-backup\";\n\n@customElement(\"dialog-hassio-create-backup\")\nclass HassioCreateBackupDialog extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _dialogParams?: HassioCreateBackupDialogParams;\n\n  @state() private _error?: string;\n\n  @state() private _creatingBackup = false;\n\n  @query(\"supervisor-backup-content\")\n  private _backupContent!: SupervisorBackupContent;\n\n  public showDialog(params: HassioCreateBackupDialogParams) {\n    this._dialogParams = params;\n    this._creatingBackup = false;\n  }\n\n  public closeDialog() {\n    this._dialogParams = undefined;\n    this._creatingBackup = false;\n    this._error = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render(): TemplateResult {\n    if (!this._dialogParams) {\n      return html``;\n    }\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        @closed=${this.closeDialog}\n        .heading=${createCloseHeading(\n          this.hass,\n          this._dialogParams.supervisor.localize(\"backup.create_backup\")\n        )}\n      >\n        ${this._creatingBackup\n          ? html` <ha-circular-progress active></ha-circular-progress>`\n          : html`<supervisor-backup-content\n              .hass=${this.hass}\n              .supervisor=${this._dialogParams.supervisor}\n            >\n            </supervisor-backup-content>`}\n        ${this._error\n          ? html`<ha-alert alert-type=\"error\">${this._error}</ha-alert>`\n          : \"\"}\n        <mwc-button slot=\"secondaryAction\" @click=${this.closeDialog}>\n          ${this._dialogParams.supervisor.localize(\"common.close\")}\n        </mwc-button>\n        <mwc-button\n          .disabled=${this._creatingBackup}\n          slot=\"primaryAction\"\n          @click=${this._createBackup}\n        >\n          ${this._dialogParams.supervisor.localize(\"backup.create\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private async _createBackup(): Promise<void> {\n    if (this._dialogParams!.supervisor.info.state !== \"running\") {\n      showAlertDialog(this, {\n        title: this._dialogParams!.supervisor.localize(\n          \"backup.could_not_create\"\n        ),\n        text: this._dialogParams!.supervisor.localize(\n          \"backup.create_blocked_not_running\",\n          \"state\",\n          this._dialogParams!.supervisor.info.state\n        ),\n      });\n      return;\n    }\n    const backupDetails = this._backupContent.backupDetails();\n    this._creatingBackup = true;\n\n    this._error = \"\";\n    if (backupDetails.password && !backupDetails.password.length) {\n      this._error = this._dialogParams!.supervisor.localize(\n        \"backup.enter_password\"\n      );\n      this._creatingBackup = false;\n      return;\n    }\n    if (\n      backupDetails.password &&\n      backupDetails.password !== backupDetails.confirm_password\n    ) {\n      this._error = this._dialogParams!.supervisor.localize(\n        \"backup.passwords_not_matching\"\n      );\n      this._creatingBackup = false;\n      return;\n    }\n\n    delete backupDetails.confirm_password;\n\n    try {\n      if (this._backupContent.backupType === \"full\") {\n        await createHassioFullBackup(this.hass, backupDetails);\n      } else {\n        await createHassioPartialBackup(this.hass, backupDetails);\n      }\n\n      this._dialogParams!.onCreate();\n      this.closeDialog();\n    } catch (err: any) {\n      this._error = extractApiErrorMessage(err);\n    }\n    this._creatingBackup = false;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      haStyleDialog,\n      css`\n        ha-circular-progress {\n          display: block;\n          text-align: center;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-hassio-create-backup\": HassioCreateBackupDialog;\n  }\n}\n"],"names":[],"sourceRoot":""}