{"version":3,"file":"chunk.d2f9e43411799381728c.js","sources":["webpack:///./hassio/src/ingress-view/hassio-ingress-view.ts"],"sourcesContent":["import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport {\n  fetchHassioAddonInfo,\n  HassioAddonDetails,\n} from \"../../../src/data/hassio/addon\";\nimport { createHassioSession } from \"../../../src/data/hassio/supervisor\";\nimport \"../../../src/layouts/hass-loading-screen\";\nimport \"../../../src/layouts/hass-subpage\";\nimport { HomeAssistant, Route } from \"../../../src/types\";\n\n@customElement(\"hassio-ingress-view\")\nclass HassioIngressView extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public route!: Route;\n\n  @property() private _addon?: HassioAddonDetails;\n\n  protected render(): TemplateResult {\n    if (!this._addon) {\n      return html` <hass-loading-screen></hass-loading-screen> `;\n    }\n\n    return html`\n      <hass-subpage .header=${this._addon.name} hassio>\n        <iframe src=${this._addon.ingress_url}></iframe>\n      </hass-subpage>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n\n    if (!changedProps.has(\"route\")) {\n      return;\n    }\n\n    const addon = this.route.path.substr(1);\n\n    const oldRoute = changedProps.get(\"route\") as this[\"route\"] | undefined;\n    const oldAddon = oldRoute ? oldRoute.path.substr(1) : undefined;\n\n    if (addon && addon !== oldAddon) {\n      this._fetchData(addon);\n    }\n  }\n\n  private async _fetchData(addonSlug: string) {\n    try {\n      const [addon] = await Promise.all([\n        fetchHassioAddonInfo(this.hass, addonSlug).catch(() => {\n          throw new Error(\"Failed to fetch add-on info\");\n        }),\n        createHassioSession(this.hass).catch(() => {\n          throw new Error(\"Failed to create an ingress session\");\n        }),\n      ]);\n\n      if (!addon.ingress) {\n        throw new Error(\"This add-on does not support ingress\");\n      }\n\n      this._addon = addon;\n    } catch (err) {\n      // eslint-disable-next-line\n      console.error(err);\n      alert(err.message || \"Unknown error starting ingress.\");\n      history.back();\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      iframe {\n        display: block;\n        width: 100%;\n        height: 100%;\n        border: 0;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hassio-ingress-view\": HassioIngressView;\n  }\n}\n"],"mappings":"AAmBA","sourceRoot":""}