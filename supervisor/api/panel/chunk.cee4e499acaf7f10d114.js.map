{"version":3,"sources":["webpack:///./hassio/src/dialogs/markdown/dialog-hassio-markdown.ts","webpack:///./src/components/ha-markdown.ts","webpack:///./src/resources/markdown_worker.ts","webpack:///../src/rpc-wrapper.js"],"names":["customElement","property","params","this","title","content","_opened","html","_templateObject2","_closeDialog","createCloseHeading","hass","_templateObject","haStyleDialog","hassioStyle","css","_templateObject3","LitElement","worker","HaMarkdown","type","Boolean","changedProps","_get","_getPrototypeOf","prototype","call","markdownWorker","_render","_callee","walker","node","regeneratorRuntime","wrap","_context","prev","next","renderMarkdown","breaks","gfm","tables","allowSvg","innerHTML","sent","_resize","document","createTreeWalker","nextNode","currentNode","HTMLAnchorElement","host","location","target","rel","addEventListener","stop","fireEvent","_this2","UpdatingElement","addMethods","__webpack_require__","methods","module","exports","w","Worker","p","name","c","callbacks","e","d","data","id","f","error","Object","Error","evt","method","Promise","a","b"],"mappings":"ylUAgBCA,YAAc,glBAEZC,kEAEAA,mEAEAA,qEAEAA,qDAA6B,0CAE9B,SAAkBC,GAChBC,KAAKC,MAAQF,EAAOE,MACpBD,KAAKE,QAAUH,EAAOG,QACtBF,KAAKG,SAAU,sCAGjB,WACE,OAAKH,KAAKG,QAGHC,YAAPC,IAGeL,KAAKM,aACLC,YAAmBP,KAAKQ,KAAMR,KAAKC,OAEtBD,KAAKE,SAAW,IARnCE,YAAPK,+CAaJ,WACET,KAAKG,SAAU,6CAGjB,WACE,MAAO,CACLO,IACAC,IACAC,YAHKC,WAnCwBC,0CCX/BC,66RAEHlB,YAAc,kCACTmB,2iBACHlB,oDAA4B,+BAE5BA,YAAS,CAAEmB,KAAMC,kDAA6B,8BAE9CpB,YAAS,CAAEmB,KAAMC,gDAA2B,sCAE7C,SAAiBC,GACfC,EAAAC,EAREL,EAQFM,WAAA,SAAAtB,MAAAuB,KAAAvB,KAAamB,GAERJ,IACHA,EAASS,OAGXxB,KAAKyB,6FAGP,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAC,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACyBlB,EAAOmB,eAC5BlC,KAAKE,QACL,CACEiC,OAAQnC,KAAKmC,OACbC,KAAK,EACLC,QAAQ,GAEV,CACEC,SAAUtC,KAAKsC,WATrB,OAsBE,IArBAtC,KAAKuC,UADPR,EAAAS,KAaExC,KAAKyC,UAECd,EAASe,SAASC,iBACtB3C,KACA,EACA,MACA,GAGK2B,EAAOiB,aACNhB,EAAOD,EAAOkB,uBAIFC,mBAChBlB,EAAKmB,OAASL,SAASM,SAASD,MAEhCnB,EAAKqB,OAAS,SACdrB,EAAKsB,IAAM,aAIXtB,EAAKsB,IAAM,uBAGFtB,GACTA,EAAKuB,iBAAiB,OAAQnD,KAAKyC,SAvCzC,wBAAAV,EAAAqB,SAAA1B,EAAA1B,0SA4CkB,kBAAMqD,YAAUC,EAAM,qBA7DjBC,yBCRzB,IAAAC,EAAqBC,EAAQ,IAC7BC,EAAA,mBACAC,EAAAC,QAAA,WACA,IAAAC,EAAA,IAAAC,OAAwBL,EAAAM,EAAuB,kCAAsCC,KAAA,qBAGrF,OAFAR,EAAAK,EAAAH,GAEAG,+BCPe,SAAA9C,EAAA2C,OACVO,EAAJ,EACIC,EAAJ,GACAnD,sCAAoCoD,OAC/BC,EAAID,EAARE,QACA,QAAID,UACAA,EAAJE,GAAU,KACLC,EAAIL,EAAUE,EAAlBE,IACAC,WACQL,EAAUE,EAAjBE,IACIF,EAAJI,MACCD,KAAKE,cAAcC,MAAMN,QAApBK,SAAsCL,EAA3CG,QAGAA,KAAKH,EAALG,aAIE,KACAI,EAAMjC,qBAAV,SACAiC,YAAcP,EAAdO,cACAA,OAAWP,EAAXO,OACA5D,sBAGF2C,mBAAiBkB,GAChB7D,8EAAgC,IAAA8D,QAAA,SAAaC,EAAAC,OACxCT,IAAJL,EACAC,KAAgB,CAAAY,EAAhBZ,GACAnD,cAAmB,CAAEE,KAAF,SAAAqD,SAAAM,SAA2B7E","file":"chunk.cee4e499acaf7f10d114.js","sourcesContent":["import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { createCloseHeading } from \"../../../../src/components/ha-dialog\";\nimport \"../../../../src/components/ha-markdown\";\nimport { haStyleDialog } from \"../../../../src/resources/styles\";\nimport { HomeAssistant } from \"../../../../src/types\";\nimport { hassioStyle } from \"../../resources/hassio-style\";\nimport { HassioMarkdownDialogParams } from \"./show-dialog-hassio-markdown\";\n\n@customElement(\"dialog-hassio-markdown\")\nclass HassioMarkdownDialog extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public title!: string;\n\n  @property() public content!: string;\n\n  @property() private _opened = false;\n\n  public showDialog(params: HassioMarkdownDialogParams) {\n    this.title = params.title;\n    this.content = params.content;\n    this._opened = true;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._opened) {\n      return html``;\n    }\n    return html`\n      <ha-dialog\n        open\n        @closing=${this._closeDialog}\n        .heading=${createCloseHeading(this.hass, this.title)}\n      >\n        <ha-markdown .content=${this.content || \"\"}></ha-markdown>\n      </ha-dialog>\n    `;\n  }\n\n  private _closeDialog(): void {\n    this._opened = false;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      hassioStyle,\n      css`\n        ha-paper-dialog {\n          min-width: 350px;\n          font-size: 14px;\n          border-radius: 2px;\n        }\n        app-toolbar {\n          margin: 0;\n          padding: 0 16px;\n          color: var(--primary-text-color);\n          background-color: var(--secondary-background-color);\n        }\n        app-toolbar [main-title] {\n          margin-left: 16px;\n        }\n        paper-checkbox {\n          display: block;\n          margin: 4px;\n        }\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          ha-paper-dialog {\n            max-height: 100%;\n          }\n          ha-paper-dialog::before {\n            content: \"\";\n            position: fixed;\n            z-index: -1;\n            top: 0px;\n            left: 0px;\n            right: 0px;\n            bottom: 0px;\n            background-color: inherit;\n          }\n          app-toolbar {\n            color: var(--text-primary-color);\n            background-color: var(--primary-color);\n          }\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-hassio-markdown\": HassioMarkdownDialog;\n  }\n}\n","import { customElement, property, UpdatingElement } from \"lit-element\";\n// @ts-ignore\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport markdownWorker from \"workerize-loader!../resources/markdown_worker\";\nimport { fireEvent } from \"../common/dom/fire_event\";\n\nlet worker: any | undefined;\n\n@customElement(\"ha-markdown\")\nclass HaMarkdown extends UpdatingElement {\n  @property() public content = \"\";\n\n  @property({ type: Boolean }) public allowSvg = false;\n\n  @property({ type: Boolean }) public breaks = false;\n\n  protected update(changedProps) {\n    super.update(changedProps);\n\n    if (!worker) {\n      worker = markdownWorker();\n    }\n\n    this._render();\n  }\n\n  private async _render() {\n    this.innerHTML = await worker.renderMarkdown(\n      this.content,\n      {\n        breaks: this.breaks,\n        gfm: true,\n        tables: true,\n      },\n      {\n        allowSvg: this.allowSvg,\n      }\n    );\n\n    this._resize();\n\n    const walker = document.createTreeWalker(\n      this,\n      1 /* SHOW_ELEMENT */,\n      null,\n      false\n    );\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode;\n\n      // Open external links in a new window\n      if (\n        node instanceof HTMLAnchorElement &&\n        node.host !== document.location.host\n      ) {\n        node.target = \"_blank\";\n        node.rel = \"noreferrer\";\n\n        // protect referrer on external links and deny window.opener access for security reasons\n        // (see https://mathiasbynens.github.io/rel-noopener/)\n        node.rel = \"noreferrer noopener\";\n\n        // Fire a resize event when images loaded to notify content resized\n      } else if (node) {\n        node.addEventListener(\"load\", this._resize);\n      }\n    }\n  }\n\n  private _resize = () => fireEvent(this, \"iron-resize\");\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-markdown\": HaMarkdown;\n  }\n}\n","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"renderMarkdown\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"ebabbd902502a5b4d115.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","export default function addMethods(worker, methods) {\n\tlet c = 0;\n\tlet callbacks = {};\n\tworker.addEventListener('message', (e) => {\n\t\tlet d = e.data;\n\t\tif (d.type!=='RPC') return;\n\t\tif (d.id) {\n\t\t\tlet f = callbacks[d.id];\n\t\t\tif (f) {\n\t\t\t\tdelete callbacks[d.id];\n\t\t\t\tif (d.error) {\n\t\t\t\t\tf[1](Object.assign(Error(d.error.message), d.error));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf[0](d.result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet evt = document.createEvent('Event');\n\t\t\tevt.initEvent(d.method, false, false);\n\t\t\tevt.data = d.params;\n\t\t\tworker.dispatchEvent(evt);\n\t\t}\n\t});\n\tmethods.forEach( method => {\n\t\tworker[method] = (...params) => new Promise( (a, b) => {\n\t\t\tlet id = ++c;\n\t\t\tcallbacks[id] = [a, b];\n\t\t\tworker.postMessage({ type: 'RPC', id, method, params });\n\t\t});\n\t});\n}\n"],"sourceRoot":""}