{"version":3,"sources":["webpack:///./src/addon-view/hassio-addon-audio.js","webpack:///./src/addon-view/hassio-addon-config.js","webpack:///../src/components/ha-icon.ts","webpack:///../src/components/ha-label-badge.ts","webpack:///./src/addon-view/hassio-addon-info.js","webpack:///./src/addon-view/hassio-addon-logs.js","webpack:///./src/addon-view/hassio-addon-network.js","webpack:///./src/addon-view/hassio-addon-view.js","webpack:///../src/components/ha-markdown.js"],"names":["HassioAddonAudio","EventsMixin","PolymerElement","html","_templateObject","hass","Object","addon","type","observer","inputDevices","Array","outputDevices","selectedInput","String","selectedOutput","error","_this","this","setProperties","audio_input","audio_output","noDevice","device","name","callApi","then","resp","dev","data","audio","input","keys","map","key","output","concat","_this2","path","slug","fire","success","body","message","customElements","define","HassioAddonConfig","hassio_addon_config_templateObject","addonSlug","config","configParsed","resetData","value","options","JSON","stringify","$","classList","remove","parse","err","add","catch","ironIconClass","get","loaded","HaIcon","_ironIconClass","_getPrototypeOf2","ha_icon_classCallCheck","_len","arguments","length","args","_key","ha_icon_possibleConstructorReturn","ha_icon_getPrototypeOf","call","apply","_iconsetName","ha_icon_inherits","node","eventName","methodName","_get","prototype","__webpack_require__","e","bind","HaLabelBadge","icon","label","description","image","LitElement","css","_templateObject6","ha_label_badge_templateObject","classMap","big","Boolean","_templateObject2","_templateObject3","_templateObject4","_templateObject5","changedProperties","ha_label_badge_get","ha_label_badge_getPrototypeOf","has","shadowRoot","getElementById","style","backgroundImage","PERMIS_DESC","rating","title","host_network","homeassistant_api","full_access","hassio_api","docker_api","host_pid","apparmor","auth_api","ingress","HassioAddonInfo","hassio_addon_info_templateObject","isRunning","computed","state","detached","version","last_version","hassio_role","webui","replace","document","location","hostname","navigate","boot","auto_update","protected","set","ingress_panel","id","target","getAttribute","showHassioMarkdownDialog","content","confirm","eventData","response","_computeHA92plus","_hass$config$version$2","_slicedToArray","split","major","minor","Number","HassioAddonLogs","hassio_addon_logs_templateObject","ANSI_HTML_STYLE","refresh","setTimeout","addonChanged","text","lastChild","removeChild","appendChild","parseTextToColoredPre","HassioAddonNetwork","hassio_addon_network_templateObject","network","network_description","items","container","host","sort","el1","el2","forEach","item","parseInt","HassioAddonView","hassio_addon_view_templateObject","route","hassio_addon_view_get","hassio_addon_view_getPrototypeOf","addEventListener","ev","apiCalled","detail","substr","lastIndexOf","history","back","routeDataChanged","routeData","info","svgWhiteList","HaMarkdown","allowSvg","_getPrototypeOf","_scriptLoaded","_renderScheduled","_resize","Promise","all","_ref","marked","filterXSS","_render","resolve","innerHTML","gfm","tables","breaks","onIgnoreTag","tag","indexOf","walker","createTreeWalker","nextNode","currentNode","tagName","innerText"],"mappings":"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","file":"chunk.87d3a6d0178fb26762cf.js","sourcesContent":["import \"web-animations-js/web-animations-next-lite.min\";\n\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-card/paper-card\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../src/resources/ha-style\";\nimport { EventsMixin } from \"../../../src/mixins/events-mixin\";\n\nclass HassioAddonAudio extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"ha-style\">\n        :host,\n        paper-card,\n        paper-dropdown-menu {\n          display: block;\n        }\n        .errors {\n          color: var(--google-red-500);\n          margin-bottom: 16px;\n        }\n        paper-item {\n          width: 450px;\n        }\n        .card-actions {\n          text-align: right;\n        }\n      </style>\n      <paper-card heading=\"Audio\">\n        <div class=\"card-content\">\n          <template is=\"dom-if\" if=\"[[error]]\">\n            <div class=\"errors\">[[error]]</div>\n          </template>\n\n          <paper-dropdown-menu label=\"Input\">\n            <paper-listbox\n              slot=\"dropdown-content\"\n              attr-for-selected=\"device\"\n              selected=\"{{selectedInput}}\"\n            >\n              <template is=\"dom-repeat\" items=\"[[inputDevices]]\">\n                <paper-item device\\$=\"[[item.device]]\"\n                  >[[item.name]]</paper-item\n                >\n              </template>\n            </paper-listbox>\n          </paper-dropdown-menu>\n          <paper-dropdown-menu label=\"Output\">\n            <paper-listbox\n              slot=\"dropdown-content\"\n              attr-for-selected=\"device\"\n              selected=\"{{selectedOutput}}\"\n            >\n              <template is=\"dom-repeat\" items=\"[[outputDevices]]\">\n                <paper-item device\\$=\"[[item.device]]\"\n                  >[[item.name]]</paper-item\n                >\n              </template>\n            </paper-listbox>\n          </paper-dropdown-menu>\n        </div>\n        <div class=\"card-actions\">\n          <mwc-button on-click=\"_saveSettings\">Save</mwc-button>\n        </div>\n      </paper-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      addon: {\n        type: Object,\n        observer: \"addonChanged\",\n      },\n      inputDevices: Array,\n      outputDevices: Array,\n      selectedInput: String,\n      selectedOutput: String,\n      error: String,\n    };\n  }\n\n  addonChanged(addon) {\n    this.setProperties({\n      selectedInput: addon.audio_input || \"null\",\n      selectedOutput: addon.audio_output || \"null\",\n    });\n    if (this.outputDevices) return;\n\n    const noDevice = [{ device: \"null\", name: \"-\" }];\n    this.hass.callApi(\"get\", \"hassio/hardware/audio\").then(\n      (resp) => {\n        const dev = resp.data.audio;\n        const input = Object.keys(dev.input).map((key) => ({\n          device: key,\n          name: dev.input[key],\n        }));\n        const output = Object.keys(dev.output).map((key) => ({\n          device: key,\n          name: dev.output[key],\n        }));\n        this.setProperties({\n          inputDevices: noDevice.concat(input),\n          outputDevices: noDevice.concat(output),\n        });\n      },\n      () => {\n        this.setProperties({\n          inputDevices: noDevice,\n          outputDevices: noDevice,\n        });\n      }\n    );\n  }\n\n  _saveSettings() {\n    this.error = null;\n    const path = `hassio/addons/${this.addon.slug}/options`;\n    this.hass\n      .callApi(\"post\", path, {\n        audio_input: this.selectedInput === \"null\" ? null : this.selectedInput,\n        audio_output:\n          this.selectedOutput === \"null\" ? null : this.selectedOutput,\n      })\n      .then(\n        () => {\n          this.fire(\"hass-api-called\", { success: true, path: path });\n        },\n        (resp) => {\n          this.error = resp.body.message;\n        }\n      );\n  }\n}\n\ncustomElements.define(\"hassio-addon-audio\", HassioAddonAudio);\n","import \"@polymer/iron-autogrow-textarea/iron-autogrow-textarea\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-card/paper-card\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../src/components/buttons/ha-call-api-button\";\n\nclass HassioAddonConfig extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"ha-style\">\n        :host {\n          display: block;\n        }\n        paper-card {\n          display: block;\n        }\n        .card-actions {\n          @apply --layout;\n          @apply --layout-justified;\n        }\n        .errors {\n          color: var(--google-red-500);\n          margin-bottom: 16px;\n        }\n        iron-autogrow-textarea {\n          width: 100%;\n          font-family: monospace;\n        }\n        .syntaxerror {\n          color: var(--google-red-500);\n        }\n      </style>\n      <paper-card heading=\"Config\">\n        <div class=\"card-content\">\n          <template is=\"dom-if\" if=\"[[error]]\">\n            <div class=\"errors\">[[error]]</div>\n          </template>\n          <iron-autogrow-textarea\n            id=\"config\"\n            value=\"{{config}}\"\n          ></iron-autogrow-textarea>\n        </div>\n        <div class=\"card-actions\">\n          <ha-call-api-button\n            class=\"warning\"\n            hass=\"[[hass]]\"\n            path=\"hassio/addons/[[addonSlug]]/options\"\n            data=\"[[resetData]]\"\n            >Reset to defaults</ha-call-api-button\n          >\n          <mwc-button on-click=\"saveTapped\" disabled=\"[[!configParsed]]\"\n            >Save</mwc-button\n          >\n        </div>\n      </paper-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      addon: {\n        type: Object,\n        observer: \"addonChanged\",\n      },\n      addonSlug: String,\n      config: {\n        type: String,\n        observer: \"configChanged\",\n      },\n      configParsed: Object,\n      error: String,\n      resetData: {\n        type: Object,\n        value: {\n          options: null,\n        },\n      },\n    };\n  }\n\n  addonChanged(addon) {\n    this.config = addon ? JSON.stringify(addon.options, null, 2) : \"\";\n  }\n\n  configChanged(config) {\n    try {\n      this.$.config.classList.remove(\"syntaxerror\");\n      this.configParsed = JSON.parse(config);\n    } catch (err) {\n      this.$.config.classList.add(\"syntaxerror\");\n      this.configParsed = null;\n    }\n  }\n\n  saveTapped() {\n    this.error = null;\n\n    this.hass\n      .callApi(\"post\", `hassio/addons/${this.addonSlug}/options`, {\n        options: this.configParsed,\n      })\n      .catch((resp) => {\n        this.error = resp.body.message;\n      });\n  }\n}\n\ncustomElements.define(\"hassio-addon-config\", HassioAddonConfig);\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import {\n  html,\n  LitElement,\n  PropertyDeclarations,\n  PropertyValues,\n  TemplateResult,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport \"./ha-icon\";\n\nclass HaLabelBadge extends LitElement {\n  public value?: string;\n  public icon?: string;\n  public label?: string;\n  public description?: string;\n  public image?: string;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      value: {},\n      icon: {},\n      label: {},\n      description: {},\n      image: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div class=\"badge-container\">\n        <div class=\"label-badge\" id=\"badge\">\n          <div\n            class=\"${classMap({\n              value: true,\n              big: Boolean(this.value && this.value.length > 4),\n            })}\"\n          >\n            ${this.icon && !this.value && !this.image\n              ? html`\n                  <ha-icon .icon=\"${this.icon}\"></ha-icon>\n                `\n              : \"\"}\n            ${this.value && !this.image\n              ? html`\n                  <span>${this.value}</span>\n                `\n              : \"\"}\n          </div>\n          ${this.label\n            ? html`\n                <div\n                  class=\"${classMap({\n                    label: true,\n                    big: this.label.length > 5,\n                  })}\"\n                >\n                  <span>${this.label}</span>\n                </div>\n              `\n            : \"\"}\n        </div>\n        ${this.description\n          ? html`\n              <div class=\"title\">${this.description}</div>\n            `\n          : \"\"}\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      css`\n        .badge-container {\n          display: inline-block;\n          text-align: center;\n          vertical-align: top;\n        }\n        .label-badge {\n          position: relative;\n          display: block;\n          margin: 0 auto;\n          width: var(--ha-label-badge-size, 2.5em);\n          text-align: center;\n          height: var(--ha-label-badge-size, 2.5em);\n          line-height: var(--ha-label-badge-size, 2.5em);\n          font-size: var(--ha-label-badge-font-size, 1.5em);\n          border-radius: 50%;\n          border: 0.1em solid var(--ha-label-badge-color, var(--primary-color));\n          color: var(--label-badge-text-color, rgb(76, 76, 76));\n\n          white-space: nowrap;\n          background-color: var(--label-badge-background-color, white);\n          background-size: cover;\n          transition: border 0.3s ease-in-out;\n        }\n        .label-badge .value {\n          font-size: 90%;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n        .label-badge .value.big {\n          font-size: 70%;\n        }\n        .label-badge .label {\n          position: absolute;\n          bottom: -1em;\n          /* Make the label as wide as container+border. (parent_borderwidth / font-size) */\n          left: -0.2em;\n          right: -0.2em;\n          line-height: 1em;\n          font-size: 0.5em;\n        }\n        .label-badge .label span {\n          box-sizing: border-box;\n          max-width: 100%;\n          display: inline-block;\n          background-color: var(--ha-label-badge-color, var(--primary-color));\n          color: var(--ha-label-badge-label-color, white);\n          border-radius: 1em;\n          padding: 9% 16% 8% 16%; /* mostly apitalized text, not much descenders => bit more top margin */\n          font-weight: 500;\n          overflow: hidden;\n          text-transform: uppercase;\n          text-overflow: ellipsis;\n          transition: background-color 0.3s ease-in-out;\n          text-transform: var(--ha-label-badge-label-text-transform, uppercase);\n        }\n        .label-badge .label.big span {\n          font-size: 90%;\n          padding: 10% 12% 7% 12%; /* push smaller text a bit down to center vertically */\n        }\n        .badge-container .title {\n          margin-top: 1em;\n          font-size: var(--ha-label-badge-title-font-size, 0.9em);\n          width: var(--ha-label-badge-title-width, 5em);\n          font-weight: var(--ha-label-badge-title-font-weight, 400);\n          overflow: hidden;\n          text-overflow: ellipsis;\n          line-height: normal;\n        }\n      `,\n    ];\n  }\n\n  protected updated(changedProperties: PropertyValues): void {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"image\")) {\n      this.shadowRoot!.getElementById(\"badge\")!.style.backgroundImage = this\n        .image\n        ? `url(${this.image})`\n        : \"\";\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-label-badge\": HaLabelBadge;\n  }\n}\n\ncustomElements.define(\"ha-label-badge\", HaLabelBadge);\n","import \"@polymer/iron-icon/iron-icon\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-card/paper-card\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../src/components/ha-label-badge\";\nimport \"../../../src/components/ha-markdown\";\nimport \"../../../src/components/buttons/ha-call-api-button\";\nimport \"../../../src/resources/ha-style\";\nimport { EventsMixin } from \"../../../src/mixins/events-mixin\";\nimport { navigate } from \"../../../src/common/navigate\";\n\nimport { showHassioMarkdownDialog } from \"../dialogs/markdown/show-dialog-hassio-markdown\";\nimport \"../components/hassio-card-content\";\n\nconst PERMIS_DESC = {\n  rating: {\n    title: \"Add-on Security Rating\",\n    description:\n      \"Hass.io provides a security rating to each of the add-ons, which indicates the risks involved when using this add-on. The more access an add-on requires on your system, the lower the score, thus raising the possible security risks.\\n\\nA score is on a scale from 1 to 6. Where 1 is the lowest score (considered the most insecure and highest risk) and a score of 6 is the highest score (considered the most secure and lowest risk).\",\n  },\n  host_network: {\n    title: \"Host Network\",\n    description:\n      \"Add-ons usually run in their own isolated network layer, which prevents them from accessing the network of the host operating system. In some cases, this network isolation can limit add-ons in providing their services and therefore, the isolation can be lifted by the add-on author, giving the add-on full access to the network capabilities of the host machine. This gives the add-on more networking capabilities but lowers the security, hence, the security rating of the add-on will be lowered when this option is used by the add-on.\",\n  },\n  homeassistant_api: {\n    title: \"Home Assistant API Access\",\n    description:\n      \"This add-on is allowed to access your running Home Assistant instance directly via the Home Assistant API. This mode handles authentication for the add-on as well, which enables an add-on to interact with Home Assistant without the need for additional authentication tokens.\",\n  },\n  full_access: {\n    title: \"Full Hardware Access\",\n    description:\n      \"This add-on is given full access to the hardware of your system, by request of the add-on author. Access is comparable to the privileged mode in Docker. Since this opens up possible security risks, this feature impacts the add-on security score negatively.\\n\\nThis level of access is not granted automatically and needs to be confirmed by you. To do this, you need to disable the protection mode on the add-on manually. Only disable the protection mode if you know, need AND trust the source of this add-on.\",\n  },\n  hassio_api: {\n    title: \"Hass.io API Access\",\n    description:\n      \"The add-on was given access to the Hass.io API, by request of the add-on author. By default, the add-on can access general version information of your system. When the add-on requests 'manager' or 'admin' level access to the API, it will gain access to control multiple parts of your Hass.io system. This permission is indicated by this badge and will impact the security score of the addon negatively.\",\n  },\n  docker_api: {\n    title: \"Full Docker Access\",\n    description:\n      \"The add-on author has requested the add-on to have management access to the Docker instance running on your system. This mode gives the add-on full access and control to your entire Hass.io system, which adds security risks, and could damage your system when misused. Therefore, this feature impacts the add-on security score negatively.\\n\\nThis level of access is not granted automatically and needs to be confirmed by you. To do this, you need to disable the protection mode on the add-on manually. Only disable the protection mode if you know, need AND trust the source of this add-on.\",\n  },\n  host_pid: {\n    title: \"Host Processes Namespace\",\n    description:\n      \"Usually, the processes the add-on runs, are isolated from all other system processes. The add-on author has requested the add-on to have access to the system processes running on the host system instance, and allow the add-on to spawn processes on the host system as well. This mode gives the add-on full access and control to your entire Hass.io system, which adds security risks, and could damage your system when misused. Therefore, this feature impacts the add-on security score negatively.\\n\\nThis level of access is not granted automatically and needs to be confirmed by you. To do this, you need to disable the protection mode on the add-on manually. Only disable the protection mode if you know, need AND trust the source of this add-on.\",\n  },\n  apparmor: {\n    title: \"AppArmor\",\n    description:\n      \"AppArmor ('Application Armor') is a Linux kernel security module that restricts add-ons capabilities like network access, raw socket access, and permission to read, write, or execute specific files.\\n\\nAdd-on authors can provide their security profiles, optimized for the add-on, or request it to be disabled. If AppArmor is disabled, it will raise security risks and therefore, has a negative impact on the security score of the add-on.\",\n  },\n  auth_api: {\n    title: \"Home Assistant Authentication\",\n    description:\n      \"An add-on can authenticate users against Home Assistant, allowing add-ons to give users the possibility to log into applications running inside add-ons, using their Home Assistant username/password. This badge indicates if the add-on author requests this capability.\",\n  },\n  ingress: {\n    title: \"Ingress\",\n    description:\n      \"This add-on is using Ingress to embed its interface securely into Home Assistant.\",\n  },\n};\n\nclass HassioAddonInfo extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"ha-style\">\n        :host {\n          display: block;\n        }\n        paper-card {\n          display: block;\n          margin-bottom: 16px;\n        }\n        paper-card.warning {\n          background-color: var(--google-red-500);\n          color: white;\n          --paper-card-header-color: white;\n        }\n        paper-card.warning mwc-button {\n          color: white !important;\n        }\n        .warning {\n          color: var(--google-red-500);\n        }\n        .addon-header {\n          @apply --paper-font-headline;\n        }\n        .light-color {\n          color: var(--secondary-text-color);\n        }\n        .addon-version {\n          float: right;\n          font-size: 15px;\n          vertical-align: middle;\n        }\n        .description {\n          margin-bottom: 16px;\n        }\n        .logo img {\n          max-height: 60px;\n          margin: 16px 0;\n          display: block;\n        }\n        .state {\n          display: flex;\n          margin: 8px 0;\n        }\n        .state div {\n          width: 180px;\n          display: inline-block;\n        }\n        .state iron-icon {\n          width: 16px;\n          color: var(--secondary-text-color);\n        }\n        paper-toggle-button {\n          display: inline;\n        }\n        iron-icon.running {\n          color: var(--paper-green-400);\n        }\n        iron-icon.stopped {\n          color: var(--google-red-300);\n        }\n        ha-call-api-button {\n          font-weight: 500;\n          color: var(--primary-color);\n        }\n        .right {\n          float: right;\n        }\n        ha-markdown img {\n          max-width: 100%;\n        }\n        .red {\n          --ha-label-badge-color: var(--label-badge-red, #df4c1e);\n        }\n        .blue {\n          --ha-label-badge-color: var(--label-badge-blue, #039be5);\n        }\n        .green {\n          --ha-label-badge-color: var(--label-badge-green, #0da035);\n        }\n        .yellow {\n          --ha-label-badge-color: var(--label-badge-yellow, #f4b400);\n        }\n        .security {\n          margin-bottom: 16px;\n        }\n        .security h3 {\n          margin-bottom: 8px;\n          font-weight: normal;\n        }\n        .security ha-label-badge {\n          cursor: pointer;\n          margin-right: 4px;\n          --iron-icon-height: 45px;\n        }\n        .protection-enable mwc-button {\n          --mdc-theme-primary: white;\n        }\n        .description a, ha-markdown a {\n          color: var(--primary-color);\n        }\n      </style>\n\n      <template is=\"dom-if\" if=\"[[computeUpdateAvailable(addon)]]\">\n        <paper-card heading=\"Update available! 🎉\">\n          <div class=\"card-content\">\n            <hassio-card-content\n              hass=\"[[hass]]\"\n              title=\"[[addon.name]] [[addon.last_version]] is available\"\n              description=\"You are currently running version [[addon.version]]\"\n              icon=\"hassio:arrow-up-bold-circle\"\n              icon-class=\"update\"\n            ></hassio-card-content>\n            <template is=\"dom-if\" if=\"[[!addon.available]]\">\n              <p>This update is no longer compatible with your system.</p>\n            </template>\n          </div>\n          <div class=\"card-actions\">\n            <ha-call-api-button\n              hass=\"[[hass]]\"\n              path=\"hassio/addons/[[addonSlug]]/update\"\n              disabled=\"[[!addon.available]]\"\n              >\n              Update\n              </ha-call-api-button\n            >\n            <template is=\"dom-if\" if=\"[[addon.changelog]]\">\n              <mwc-button on-click=\"openChangelog\">Changelog</mwc-button>\n            </template>\n          </div>\n        </paper-card>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[!addon.protected]]\">\n        <paper-card heading=\"Warning: Protection mode is disabled!\" class=\"warning\">\n          <div class=\"card-content\">\n            Protection mode on this add-on is disabled! This gives the add-on full access to the entire system, which adds security risks, and could damage your system when used incorrectly. Only disable the protection mode if you know, need AND trust the source of this add-on.\n          </div>\n          <div class=\"card-actions protection-enable\">\n              <mwc-button on-click=\"protectionToggled\">Enable Protection mode</mwc-button>\n            </div>\n          </div>\n        </paper-card>\n      </template>\n\n      <paper-card>\n        <div class=\"card-content\">\n          <div class=\"addon-header\">\n            [[addon.name]]\n            <div class=\"addon-version light-color\">\n              <template is=\"dom-if\" if=\"[[addon.version]]\">\n                [[addon.version]]\n                <template is=\"dom-if\" if=\"[[isRunning]]\">\n                  <iron-icon\n                    title=\"Add-on is running\"\n                    class=\"running\"\n                    icon=\"hassio:circle\"\n                  ></iron-icon>\n                </template>\n                <template is=\"dom-if\" if=\"[[!isRunning]]\">\n                  <iron-icon\n                    title=\"Add-on is stopped\"\n                    class=\"stopped\"\n                    icon=\"hassio:circle\"\n                  ></iron-icon>\n                </template>\n              </template>\n              <template is=\"dom-if\" if=\"[[!addon.version]]\">\n                [[addon.last_version]]\n              </template>\n            </div>\n          </div>\n          <div class=\"description light-color\">\n            [[addon.description]].<br />\n            Visit\n            <a href=\"[[addon.url]]\" target=\"_blank\">[[addon.name]] page</a> for\n            details.\n          </div>\n          <template is=\"dom-if\" if=\"[[addon.logo]]\">\n            <a href=\"[[addon.url]]\" target=\"_blank\" class=\"logo\">\n              <img src=\"/api/hassio/addons/[[addonSlug]]/logo\" />\n            </a>\n          </template>\n          <div class=\"security\">\n              <ha-label-badge\n                class$=\"[[computeSecurityClassName(addon.rating)]]\"\n                on-click=\"showMoreInfo\"\n                id=\"rating\"\n                value=\"[[addon.rating]]\"\n                label=\"rating\"\n                description=\"\"\n              ></ha-label-badge>\n              <template is=\"dom-if\" if=\"[[addon.host_network]]\">\n                <ha-label-badge\n                on-click=\"showMoreInfo\"\n                id=\"host_network\"\n                icon=\"hassio:network\"\n                label=\"host\"\n                description=\"\"\n                ></ha-label-badge>\n              </template>\n              <template is=\"dom-if\" if=\"[[addon.full_access]]\">\n                <ha-label-badge\n                on-click=\"showMoreInfo\"\n                id=\"full_access\"\n                icon=\"hassio:chip\"\n                label=\"hardware\"\n                description=\"\"\n                ></ha-label-badge>\n              </template>\n              <template is=\"dom-if\" if=\"[[addon.homeassistant_api]]\">\n                <ha-label-badge\n                  on-click=\"showMoreInfo\"\n                  id=\"homeassistant_api\"\n                  icon=\"hassio:home-assistant\"\n                  label=\"hass\"\n                  description=\"\"\n                ></ha-label-badge>\n              </template>\n              <template is=\"dom-if\" if=\"[[computeHassioApi(addon)]]\">\n                <ha-label-badge\n                  on-click=\"showMoreInfo\"\n                  id=\"hassio_api\"\n                  icon=\"hassio:home-assistant\"\n                  label=\"hassio\"\n                  description=\"[[addon.hassio_role]]\"\n                ></ha-label-badge>\n              </template>\n              <template is=\"dom-if\" if=\"[[addon.docker_api]]\">\n                <ha-label-badge\n                  on-click=\"showMoreInfo\"\n                  id=\"docker_api\"\n                  icon=\"hassio:docker\"\n                  label=\"docker\"\n                  description=\"\"\n                ></ha-label-badge>\n              </template>\n              <template is=\"dom-if\" if=\"[[addon.host_pid]]\">\n                <ha-label-badge\n                  on-click=\"showMoreInfo\"\n                  id=\"host_pid\"\n                  icon=\"hassio:pound\"\n                  label=\"host pid\"\n                  description=\"\"\n                ></ha-label-badge>\n              </template>\n              <template is=\"dom-if\" if=\"[[addon.apparmor]]\">\n                <ha-label-badge\n                  on-click=\"showMoreInfo\"\n                  class$=\"[[computeApparmorClassName(addon.apparmor)]]\"\n                  id=\"apparmor\"\n                  icon=\"hassio:shield\"\n                  label=\"apparmor\"\n                  description=\"\"\n                ></ha-label-badge>\n              </template>\n              <template is=\"dom-if\" if=\"[[addon.auth_api]]\">\n                <ha-label-badge\n                  on-click=\"showMoreInfo\"\n                  id=\"auth_api\"\n                  icon=\"hassio:key\"\n                  label=\"auth\"\n                  description=\"\"\n                ></ha-label-badge>\n              </template>\n              <template is=\"dom-if\" if=\"[[addon.ingress]]\">\n                <ha-label-badge\n                  on-click=\"showMoreInfo\"\n                  id=\"ingress\"\n                  icon=\"hassio:cursor-default-click-outline\"\n                  label=\"ingress\"\n                  description=\"\"\n                ></ha-label-badge>\n              </template>\n          </div>\n          <template is=\"dom-if\" if=\"[[addon.version]]\">\n            <div class=\"state\">\n              <div>Start on boot</div>\n              <paper-toggle-button\n                on-change=\"startOnBootToggled\"\n                checked=\"[[computeStartOnBoot(addon.boot)]]\"\n              ></paper-toggle-button>\n            </div>\n            <div class=\"state\">\n              <div>Auto update</div>\n              <paper-toggle-button\n                on-change=\"autoUpdateToggled\"\n                checked=\"[[addon.auto_update]]\"\n              ></paper-toggle-button>\n            </div>\n            <template is=\"dom-if\" if=\"[[addon.ingress]]\">\n              <div class=\"state\">\n                <div>Show in sidebar</div>\n                <paper-toggle-button\n                  on-change=\"panelToggled\"\n                  checked=\"[[addon.ingress_panel]]\"\n                  disabled=\"[[_computeCannotIngressSidebar(hass, addon)]]\"\n                ></paper-toggle-button>\n                <template is=\"dom-if\" if=\"[[_computeCannotIngressSidebar(hass, addon)]]\">\n                  <span>This option requires Home Assistant 0.92 or later.</span>\n                </template>\n              </div>\n            </template>\n            <div class=\"state\">\n              <div>\n                Protection mode\n                <span>\n                  <iron-icon icon=\"hassio:information\"></iron-icon>\n                  <paper-tooltip>Grant the add-on elevated system access.</paper-tooltip>\n                </span>\n              </div>\n              <paper-toggle-button\n                on-change=\"protectionToggled\"\n                checked=\"[[addon.protected]]\"\n              ></paper-toggle-button>\n            </div>\n          </template>\n        </div>\n        <div class=\"card-actions\">\n          <template is=\"dom-if\" if=\"[[addon.version]]\">\n            <mwc-button class=\"warning\" on-click=\"_unistallClicked\"\n              >Uninstall</mwc-button\n            >\n            <template is=\"dom-if\" if=\"[[addon.build]]\">\n              <ha-call-api-button\n                class=\"warning\"\n                hass=\"[[hass]]\"\n                path=\"hassio/addons/[[addonSlug]]/rebuild\"\n                >Rebuild</ha-call-api-button\n              >\n            </template>\n            <template is=\"dom-if\" if=\"[[isRunning]]\">\n              <ha-call-api-button\n                class=\"warning\"\n                hass=\"[[hass]]\"\n                path=\"hassio/addons/[[addonSlug]]/restart\"\n                >Restart</ha-call-api-button\n              >\n              <ha-call-api-button\n                class=\"warning\"\n                hass=\"[[hass]]\"\n                path=\"hassio/addons/[[addonSlug]]/stop\"\n                >Stop</ha-call-api-button\n              >\n            </template>\n            <template is=\"dom-if\" if=\"[[!isRunning]]\">\n              <ha-call-api-button\n                hass=\"[[hass]]\"\n                path=\"hassio/addons/[[addonSlug]]/start\"\n                >Start</ha-call-api-button\n              >\n            </template>\n            <template\n              is=\"dom-if\"\n              if=\"[[computeShowWebUI(addon.ingress, addon.webui, isRunning)]]\"\n            >\n              <a\n                href=\"[[pathWebui(addon.webui)]]\"\n                tabindex=\"-1\"\n                target=\"_blank\"\n                class=\"right\"\n                ><mwc-button>Open web UI</mwc-button></a\n              >\n            </template>\n            <template\n              is=\"dom-if\"\n              if=\"[[computeShowIngressUI(addon.ingress, isRunning)]]\"\n            >\n              <mwc-button\n                tabindex=\"-1\"\n                class=\"right\"\n                on-click=\"openIngress\"\n              >Open web UI</mwc-button>\n            </template>\n          </template>\n          <template is=\"dom-if\" if=\"[[!addon.version]]\">\n            <template is=\"dom-if\" if=\"[[!addon.available]]\">\n              <p class=\"warning\">This add-on is not available on your system.</p>\n            </template>\n            <ha-call-api-button\n              disabled=\"[[!addon.available]]\"\n              hass=\"[[hass]]\"\n              path=\"hassio/addons/[[addonSlug]]/install\"\n              >Install</ha-call-api-button\n            >\n          </template>\n        </div>\n      </paper-card>\n      <template is=\"dom-if\" if=\"[[addon.long_description]]\">\n        <paper-card>\n          <div class=\"card-content\">\n            <ha-markdown content=\"[[addon.long_description]]\"></ha-markdown>\n          </div>\n        </paper-card>\n      </template>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      addon: Object,\n      addonSlug: String,\n      isRunning: { type: Boolean, computed: \"computeIsRunning(addon)\" },\n    };\n  }\n\n  computeIsRunning(addon) {\n    return addon && addon.state === \"started\";\n  }\n\n  computeUpdateAvailable(addon) {\n    return (\n      addon &&\n      !addon.detached &&\n      addon.version &&\n      addon.version !== addon.last_version\n    );\n  }\n\n  computeHassioApi(addon) {\n    return (\n      addon.hassio_api &&\n      (addon.hassio_role === \"manager\" || addon.hassio_role === \"admin\")\n    );\n  }\n\n  computeApparmorClassName(apparmor) {\n    if (apparmor === \"profile\") {\n      return \"green\";\n    }\n    if (apparmor === \"disable\") {\n      return \"red\";\n    }\n    return \"\";\n  }\n\n  pathWebui(webui) {\n    return webui && webui.replace(\"[HOST]\", document.location.hostname);\n  }\n\n  computeShowWebUI(ingress, webui, isRunning) {\n    return !ingress && webui && isRunning;\n  }\n\n  openIngress() {\n    navigate(this, `/hassio/ingress/${this.addon.slug}`);\n  }\n\n  computeShowIngressUI(ingress, isRunning) {\n    return ingress && isRunning;\n  }\n\n  computeStartOnBoot(state) {\n    return state === \"auto\";\n  }\n\n  computeSecurityClassName(rating) {\n    if (rating > 4) {\n      return \"green\";\n    }\n    if (rating > 2) {\n      return \"yellow\";\n    }\n    return \"red\";\n  }\n\n  startOnBootToggled() {\n    const data = { boot: this.addon.boot === \"auto\" ? \"manual\" : \"auto\" };\n    this.hass.callApi(\"POST\", `hassio/addons/${this.addonSlug}/options`, data);\n  }\n\n  autoUpdateToggled() {\n    const data = { auto_update: !this.addon.auto_update };\n    this.hass.callApi(\"POST\", `hassio/addons/${this.addonSlug}/options`, data);\n  }\n\n  protectionToggled() {\n    const data = { protected: !this.addon.protected };\n    this.hass.callApi(\"POST\", `hassio/addons/${this.addonSlug}/security`, data);\n    this.set(\"addon.protected\", !this.addon.protected);\n  }\n\n  panelToggled() {\n    const data = { ingress_panel: !this.addon.ingress_panel };\n    this.hass.callApi(\"POST\", `hassio/addons/${this.addonSlug}/options`, data);\n  }\n\n  showMoreInfo(e) {\n    const id = e.target.getAttribute(\"id\");\n    showHassioMarkdownDialog(this, {\n      title: PERMIS_DESC[id].title,\n      content: PERMIS_DESC[id].description,\n    });\n  }\n\n  openChangelog() {\n    this.hass\n      .callApi(\"get\", `hassio/addons/${this.addonSlug}/changelog`)\n      .then((resp) => resp, () => \"Error getting changelog\")\n      .then((content) => {\n        showHassioMarkdownDialog(this, {\n          title: \"Changelog\",\n          content: content,\n        });\n      });\n  }\n\n  _unistallClicked() {\n    if (!confirm(\"Are you sure you want to uninstall this add-on?\")) {\n      return;\n    }\n    const path = `hassio/addons/${this.addonSlug}/uninstall`;\n    const eventData = {\n      path: path,\n    };\n    this.hass\n      .callApi(\"post\", path)\n      .then(\n        (resp) => {\n          eventData.success = true;\n          eventData.response = resp;\n        },\n        (resp) => {\n          eventData.success = false;\n          eventData.response = resp;\n        }\n      )\n      .then(() => {\n        this.fire(\"hass-api-called\", eventData);\n      });\n  }\n\n  _computeCannotIngressSidebar(hass, addon) {\n    return !addon.ingress || !this._computeHA92plus(hass);\n  }\n\n  _computeHA92plus(hass) {\n    const [major, minor] = hass.config.version.split(\".\", 2);\n    return Number(major) > 0 || (major === \"0\" && Number(minor) >= 92);\n  }\n}\ncustomElements.define(\"hassio-addon-info\", HassioAddonInfo);\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-card/paper-card\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport { ANSI_HTML_STYLE, parseTextToColoredPre } from \"../ansi-to-html\";\n\nimport \"../../../src/resources/ha-style\";\n\nclass HassioAddonLogs extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"ha-style\">\n        :host,\n        paper-card {\n          display: block;\n        }\n        pre {\n          overflow-x: auto;\n          white-space: pre-wrap;\n          overflow-wrap: break-word;\n        }\n      </style>\n      ${ANSI_HTML_STYLE}\n      <paper-card heading=\"Log\">\n        <div class=\"card-content\" id=\"content\"></div>\n        <div class=\"card-actions\">\n          <mwc-button on-click=\"refresh\">Refresh</mwc-button>\n        </div>\n      </paper-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      addonSlug: {\n        type: String,\n        observer: \"addonSlugChanged\",\n      },\n    };\n  }\n\n  addonSlugChanged(slug) {\n    if (!this.hass) {\n      setTimeout(() => {\n        this.addonChanged(slug);\n      }, 0);\n      return;\n    }\n\n    this.refresh();\n  }\n\n  refresh() {\n    this.hass\n      .callApi(\"get\", `hassio/addons/${this.addonSlug}/logs`)\n      .then((text) => {\n        while (this.$.content.lastChild) {\n          this.$.content.removeChild(this.$.content.lastChild);\n        }\n        this.$.content.appendChild(parseTextToColoredPre(text));\n      });\n  }\n}\n\ncustomElements.define(\"hassio-addon-logs\", HassioAddonLogs);\n","import \"@polymer/paper-card/paper-card\";\nimport \"@polymer/paper-input/paper-input\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../src/components/buttons/ha-call-api-button\";\nimport \"../../../src/resources/ha-style\";\nimport { EventsMixin } from \"../../../src/mixins/events-mixin\";\n\nclass HassioAddonNetwork extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"ha-style\">\n        :host {\n          display: block;\n        }\n        paper-card {\n          display: block;\n        }\n        .errors {\n          color: var(--google-red-500);\n          margin-bottom: 16px;\n        }\n        .card-actions {\n          @apply --layout;\n          @apply --layout-justified;\n        }\n      </style>\n      <paper-card heading=\"Network\">\n        <div class=\"card-content\">\n          <template is=\"dom-if\" if=\"[[error]]\">\n            <div class=\"errors\">[[error]]</div>\n          </template>\n\n          <table>\n            <tbody>\n              <tr>\n                <th>Container</th>\n                <th>Host</th>\n                <th>Description</th>\n              </tr>\n              <template is=\"dom-repeat\" items=\"[[config]]\">\n                <tr>\n                  <td>[[item.container]]</td>\n                  <td>\n                    <paper-input\n                      placeholder=\"disabled\"\n                      value=\"{{item.host}}\"\n                      no-label-float=\"\"\n                    ></paper-input>\n                  </td>\n                  <td>[[item.description]]</td>\n                </tr>\n              </template>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"card-actions\">\n          <ha-call-api-button\n            class=\"warning\"\n            hass=\"[[hass]]\"\n            path=\"hassio/addons/[[addonSlug]]/options\"\n            data=\"[[resetData]]\"\n            >Reset to defaults</ha-call-api-button\n          >\n          <mwc-button on-click=\"saveTapped\">Save</mwc-button>\n        </div>\n      </paper-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      addonSlug: String,\n      config: Object,\n      addon: {\n        type: Object,\n        observer: \"addonChanged\",\n      },\n      error: String,\n      resetData: {\n        type: Object,\n        value: {\n          network: null,\n        },\n      },\n    };\n  }\n\n  addonChanged(addon) {\n    if (!addon) return;\n\n    const network = addon.network || {};\n    const description = addon.network_description || {};\n    const items = Object.keys(network).map((key) => ({\n      container: key,\n      host: network[key],\n      description: description[key],\n    }));\n    this.config = items.sort(function(el1, el2) {\n      return el1.host - el2.host;\n    });\n  }\n\n  saveTapped() {\n    this.error = null;\n    const data = {};\n    this.config.forEach(function(item) {\n      data[item.container] = parseInt(item.host);\n    });\n    const path = `hassio/addons/${this.addonSlug}/options`;\n\n    this.hass\n      .callApi(\"post\", path, {\n        network: data,\n      })\n      .then(\n        () => {\n          this.fire(\"hass-api-called\", { success: true, path: path });\n        },\n        (resp) => {\n          this.error = resp.body.message;\n        }\n      );\n  }\n}\n\ncustomElements.define(\"hassio-addon-network\", HassioAddonNetwork);\n","import \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./hassio-addon-audio\";\nimport \"./hassio-addon-config\";\nimport \"./hassio-addon-info\";\nimport \"./hassio-addon-logs\";\nimport \"./hassio-addon-network\";\n\nclass HassioAddonView extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          color: var(--primary-text-color);\n          --paper-card-header-color: var(--primary-text-color);\n        }\n        .content {\n          padding: 24px 0 32px;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n        hassio-addon-info,\n        hassio-addon-network,\n        hassio-addon-audio,\n        hassio-addon-config {\n          margin-bottom: 24px;\n          width: 600px;\n        }\n        hassio-addon-logs {\n          max-width: calc(100% - 8px);\n          min-width: 600px;\n        }\n        @media only screen and (max-width: 600px) {\n          hassio-addon-info,\n          hassio-addon-network,\n          hassio-addon-audio,\n          hassio-addon-config,\n          hassio-addon-logs {\n            max-width: 100%;\n            min-width: 100%;\n          }\n        }\n      </style>\n      <hass-subpage header=\"Hass.io: add-on details\" hassio>\n        <div class=\"content\">\n          <hassio-addon-info\n            hass=\"[[hass]]\"\n            addon=\"[[addon]]\"\n            addon-slug=\"[[addonSlug]]\"\n          ></hassio-addon-info>\n\n          <template is=\"dom-if\" if=\"[[addon.version]]\">\n            <hassio-addon-config\n              hass=\"[[hass]]\"\n              addon=\"[[addon]]\"\n              addon-slug=\"[[addonSlug]]\"\n            ></hassio-addon-config>\n\n            <template is=\"dom-if\" if=\"[[addon.audio]]\">\n              <hassio-addon-audio\n                hass=\"[[hass]]\"\n                addon=\"[[addon]]\"\n              ></hassio-addon-audio>\n            </template>\n\n            <template is=\"dom-if\" if=\"[[addon.network]]\">\n              <hassio-addon-network\n                hass=\"[[hass]]\"\n                addon=\"[[addon]]\"\n                addon-slug=\"[[addonSlug]]\"\n              ></hassio-addon-network>\n            </template>\n\n            <hassio-addon-logs\n              hass=\"[[hass]]\"\n              addon-slug=\"[[addonSlug]]\"\n            ></hassio-addon-logs>\n          </template>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      route: {\n        type: Object,\n        observer: \"routeDataChanged\",\n      },\n      addonSlug: {\n        type: String,\n        computed: \"_computeSlug(route)\",\n      },\n      addon: Object,\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"hass-api-called\", (ev) => this.apiCalled(ev));\n  }\n\n  apiCalled(ev) {\n    const path = ev.detail.path;\n\n    if (!path) return;\n\n    if (path.substr(path.lastIndexOf(\"/\") + 1) === \"uninstall\") {\n      history.back();\n    } else {\n      this.routeDataChanged(this.route);\n    }\n  }\n\n  routeDataChanged(routeData) {\n    const addon = routeData.path.substr(1);\n    this.hass.callApi(\"get\", `hassio/addons/${addon}/info`).then(\n      (info) => {\n        this.addon = info.data;\n      },\n      () => {\n        this.addon = null;\n      }\n    );\n  }\n\n  _computeSlug(route) {\n    return route.path.substr(1);\n  }\n}\n\ncustomElements.define(\"hassio-addon-view\", HassioAddonView);\n","import { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\nlet loaded = null;\n\n/**\n * White list allowed svg tag.\n * Only put in the tag used in QR code, can be extend in future.\n */\nconst svgWhiteList = [\"svg\", \"path\"];\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaMarkdown extends EventsMixin(PolymerElement) {\n  static get properties() {\n    return {\n      content: {\n        type: String,\n        observer: \"_render\",\n      },\n      allowSvg: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // 0 = not loaded, 1 = success, 2 = error\n    this._scriptLoaded = 0;\n    this._renderScheduled = false;\n    this._resize = () => this.fire(\"iron-resize\");\n\n    if (!loaded) {\n      loaded = import(/* webpackChunkName: \"load_markdown\" */ \"../resources/load_markdown\");\n    }\n    loaded\n      .then(\n        ({ marked, filterXSS }) => {\n          this.marked = marked;\n          this.filterXSS = filterXSS;\n          this._scriptLoaded = 1;\n        },\n        () => {\n          this._scriptLoaded = 2;\n        }\n      )\n      .then(() => this._render());\n  }\n\n  _render() {\n    if (this._scriptLoaded === 0 || this._renderScheduled) return;\n\n    this._renderScheduled = true;\n\n    // debounce it to next microtask.\n    Promise.resolve().then(() => {\n      this._renderScheduled = false;\n\n      if (this._scriptLoaded === 1) {\n        this.innerHTML = this.filterXSS(\n          this.marked(this.content, {\n            gfm: true,\n            tables: true,\n            breaks: true,\n          }),\n          {\n            onIgnoreTag: this.allowSvg\n              ? (tag, html) => (svgWhiteList.indexOf(tag) >= 0 ? html : null)\n              : null,\n          }\n        );\n        this._resize();\n\n        const walker = document.createTreeWalker(\n          this,\n          1 /* SHOW_ELEMENT */,\n          null,\n          false\n        );\n\n        while (walker.nextNode()) {\n          const node = walker.currentNode;\n\n          // Open external links in a new window\n          if (node.tagName === \"A\" && node.host !== document.location.host) {\n            node.target = \"_blank\";\n\n            // Fire a resize event when images loaded to notify content resized\n          } else if (node.tagName === \"IMG\") {\n            node.addEventListener(\"load\", this._resize);\n          }\n        }\n      } else if (this._scriptLoaded === 2) {\n        this.innerText = this.content;\n      }\n    });\n  }\n}\n\ncustomElements.define(\"ha-markdown\", HaMarkdown);\n"],"sourceRoot":""}